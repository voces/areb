
const warns = new Set();
const warnOnce = message => {

	if ( warns.has( message ) ) return;
	warns.add( message );
	console.warn( message );

};

/* eslint-disable no-unused-vars */
export default map => ( {
	OrderId: orderIdString => /* integer*/ warnOnce( "OrderId not yet implemented" ),
	OrderId2String: orderId => /* string*/ warnOnce( "OrderId2String not yet implemented" ),
	UnitId: unitIdString => /* integer*/ warnOnce( "UnitId not yet implemented" ),
	UnitId2String: unitId => /* string*/ warnOnce( "UnitId2String not yet implemented" ),
	AbilityId: abilityIdString => /* integer*/ warnOnce( "AbilityId not yet implemented" ),
	AbilityId2String: abilityId => /* string*/ warnOnce( "AbilityId2String not yet implemented" ),
	GetObjectName: objectId => /* string*/ warnOnce( "GetObjectName not yet implemented" ),
	GetGamePlacement: ( /* nothing*/ ) => /* placement*/ warnOnce( "GetGamePlacement not yet implemented" ),
	GetGameSpeed: ( /* nothing*/ ) => /* gamespeed*/ warnOnce( "GetGameSpeed not yet implemented" ),
	GetGameDifficulty: ( /* nothing*/ ) => /* gamedifficulty*/ warnOnce( "GetGameDifficulty not yet implemented" ),
	GetResourceDensity: ( /* nothing*/ ) => /* mapdensity*/ warnOnce( "GetResourceDensity not yet implemented" ),
	GetCreatureDensity: ( /* nothing*/ ) => /* mapdensity*/ warnOnce( "GetCreatureDensity not yet implemented" ),
	GetStartLocationX: whichStartLocation => /* real*/ warnOnce( "GetStartLocationX not yet implemented" ),
	GetStartLocationY: whichStartLocation => /* real*/ warnOnce( "GetStartLocationY not yet implemented" ),
	GetStartLocationLoc: whichStartLocation => /* location*/ warnOnce( "GetStartLocationLoc not yet implemented" ),
	GetFilterUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetFilterUnit not yet implemented" ),
	GetEnumUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetEnumUnit not yet implemented" ),
	GetFilterDestructable: ( /* nothing*/ ) => /* destructable*/ warnOnce( "GetFilterDestructable not yet implemented" ),
	GetEnumDestructable: ( /* nothing*/ ) => /* destructable*/ warnOnce( "GetEnumDestructable not yet implemented" ),
	GetFilterItem: ( /* nothing*/ ) => /* item*/ warnOnce( "GetFilterItem not yet implemented" ),
	GetEnumItem: ( /* nothing*/ ) => /* item*/ warnOnce( "GetEnumItem not yet implemented" ),
	GetFilterPlayer: ( /* nothing*/ ) => /* player*/ warnOnce( "GetFilterPlayer not yet implemented" ),
	GetEnumPlayer: ( /* nothing*/ ) => /* player*/ warnOnce( "GetEnumPlayer not yet implemented" ),
	GetTriggeringTrigger: ( /* nothing*/ ) => /* trigger*/ warnOnce( "GetTriggeringTrigger not yet implemented" ),
	GetTriggerEventId: ( /* nothing*/ ) => /* eventid*/ warnOnce( "GetTriggerEventId not yet implemented" ),
	GetTriggerEvalCount: whichTrigger => /* integer*/ warnOnce( "GetTriggerEvalCount not yet implemented" ),
	GetTriggerExecCount: whichTrigger => /* integer*/ warnOnce( "GetTriggerExecCount not yet implemented" ),
	GetEventGameState: ( /* nothing*/ ) => /* gamestate*/ warnOnce( "GetEventGameState not yet implemented" ),
	GetWinningPlayer: ( /* nothing*/ ) => /* player*/ warnOnce( "GetWinningPlayer not yet implemented" ),
	GetTriggeringRegion: ( /* nothing*/ ) => /* region*/ warnOnce( "GetTriggeringRegion not yet implemented" ),
	GetEnteringUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetEnteringUnit not yet implemented" ),
	GetLeavingUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetLeavingUnit not yet implemented" ),
	GetTriggeringTrackable: ( /* nothing*/ ) => /* trackable*/ warnOnce( "GetTriggeringTrackable not yet implemented" ),
	GetClickedButton: ( /* nothing*/ ) => /* button*/ warnOnce( "GetClickedButton not yet implemented" ),
	GetClickedDialog: ( /* nothing*/ ) => /* dialog*/ warnOnce( "GetClickedDialog not yet implemented" ),
	GetTournamentFinishSoonTimeRemaining: ( /* nothing*/ ) => /* real*/ warnOnce( "GetTournamentFinishSoonTimeRemaining not yet implemented" ),
	GetTournamentFinishNowRule: ( /* nothing*/ ) => /* integer*/ warnOnce( "GetTournamentFinishNowRule not yet implemented" ),
	GetTournamentFinishNowPlayer: ( /* nothing*/ ) => /* player*/ warnOnce( "GetTournamentFinishNowPlayer not yet implemented" ),
	GetTournamentScore: whichPlayer => /* integer*/ warnOnce( "GetTournamentScore not yet implemented" ),
	GetSaveBasicFilename: ( /* nothing*/ ) => /* string*/ warnOnce( "GetSaveBasicFilename not yet implemented" ),
	GetTriggerPlayer: ( /* nothing*/ ) => /* player*/ warnOnce( "GetTriggerPlayer not yet implemented" ),
	GetLevelingUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetLevelingUnit not yet implemented" ),
	GetLearningUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetLearningUnit not yet implemented" ),
	GetLearnedSkill: ( /* nothing*/ ) => /* integer*/ warnOnce( "GetLearnedSkill not yet implemented" ),
	GetLearnedSkillLevel: ( /* nothing*/ ) => /* integer*/ warnOnce( "GetLearnedSkillLevel not yet implemented" ),
	GetRevivableUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetRevivableUnit not yet implemented" ),
	GetRevivingUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetRevivingUnit not yet implemented" ),
	GetAttacker: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetAttacker not yet implemented" ),
	GetRescuer: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetRescuer not yet implemented" ),
	GetDyingUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetDyingUnit not yet implemented" ),
	GetKillingUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetKillingUnit not yet implemented" ),
	GetDecayingUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetDecayingUnit not yet implemented" ),
	GetSelectedUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetSelectedUnit not yet implemented" ),
	GetConstructingStructure: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetConstructingStructure not yet implemented" ),
	GetCancelledStructure: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetCancelledStructure not yet implemented" ),
	GetConstructedStructure: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetConstructedStructure not yet implemented" ),
	GetResearchingUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetResearchingUnit not yet implemented" ),
	GetResearched: ( /* nothing*/ ) => /* integer*/ warnOnce( "GetResearched not yet implemented" ),
	GetTrainedUnitType: ( /* nothing*/ ) => /* integer*/ warnOnce( "GetTrainedUnitType not yet implemented" ),
	GetTrainedUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetTrainedUnit not yet implemented" ),
	GetDetectedUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetDetectedUnit not yet implemented" ),
	GetSummoningUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetSummoningUnit not yet implemented" ),
	GetSummonedUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetSummonedUnit not yet implemented" ),
	GetTransportUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetTransportUnit not yet implemented" ),
	GetLoadedUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetLoadedUnit not yet implemented" ),
	GetSellingUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetSellingUnit not yet implemented" ),
	GetSoldUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetSoldUnit not yet implemented" ),
	GetBuyingUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetBuyingUnit not yet implemented" ),
	GetSoldItem: ( /* nothing*/ ) => /* item*/ warnOnce( "GetSoldItem not yet implemented" ),
	GetChangingUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetChangingUnit not yet implemented" ),
	GetChangingUnitPrevOwner: ( /* nothing*/ ) => /* player*/ warnOnce( "GetChangingUnitPrevOwner not yet implemented" ),
	GetManipulatingUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetManipulatingUnit not yet implemented" ),
	GetManipulatedItem: ( /* nothing*/ ) => /* item*/ warnOnce( "GetManipulatedItem not yet implemented" ),
	GetOrderedUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetOrderedUnit not yet implemented" ),
	GetIssuedOrderId: ( /* nothing*/ ) => /* integer*/ warnOnce( "GetIssuedOrderId not yet implemented" ),
	GetOrderPointX: ( /* nothing*/ ) => /* real*/ warnOnce( "GetOrderPointX not yet implemented" ),
	GetOrderPointY: ( /* nothing*/ ) => /* real*/ warnOnce( "GetOrderPointY not yet implemented" ),
	GetOrderPointLoc: ( /* nothing*/ ) => /* location*/ warnOnce( "GetOrderPointLoc not yet implemented" ),
	GetOrderTarget: ( /* nothing*/ ) => /* widget*/ warnOnce( "GetOrderTarget not yet implemented" ),
	GetOrderTargetDestructable: ( /* nothing*/ ) => /* destructable*/ warnOnce( "GetOrderTargetDestructable not yet implemented" ),
	GetOrderTargetItem: ( /* nothing*/ ) => /* item*/ warnOnce( "GetOrderTargetItem not yet implemented" ),
	GetOrderTargetUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetOrderTargetUnit not yet implemented" ),
	GetSpellAbilityUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetSpellAbilityUnit not yet implemented" ),
	GetSpellAbilityId: ( /* nothing*/ ) => /* integer*/ warnOnce( "GetSpellAbilityId not yet implemented" ),
	GetSpellAbility: ( /* nothing*/ ) => /* ability*/ warnOnce( "GetSpellAbility not yet implemented" ),
	GetSpellTargetLoc: ( /* nothing*/ ) => /* location*/ warnOnce( "GetSpellTargetLoc not yet implemented" ),
	GetSpellTargetX: ( /* nothing*/ ) => /* real*/ warnOnce( "GetSpellTargetX not yet implemented" ),
	GetSpellTargetY: ( /* nothing*/ ) => /* real*/ warnOnce( "GetSpellTargetY not yet implemented" ),
	GetSpellTargetDestructable: ( /* nothing*/ ) => /* destructable*/ warnOnce( "GetSpellTargetDestructable not yet implemented" ),
	GetSpellTargetItem: ( /* nothing*/ ) => /* item*/ warnOnce( "GetSpellTargetItem not yet implemented" ),
	GetSpellTargetUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetSpellTargetUnit not yet implemented" ),
	GetEventPlayerState: ( /* nothing*/ ) => /* playerstate*/ warnOnce( "GetEventPlayerState not yet implemented" ),
	GetEventPlayerChatString: ( /* nothing*/ ) => /* string*/ warnOnce( "GetEventPlayerChatString not yet implemented" ),
	GetEventPlayerChatStringMatched: ( /* nothing*/ ) => /* string*/ warnOnce( "GetEventPlayerChatStringMatched not yet implemented" ),
	GetTriggerUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetTriggerUnit not yet implemented" ),
	GetEventUnitState: ( /* nothing*/ ) => /* unitstate*/ warnOnce( "GetEventUnitState not yet implemented" ),
	GetEventDamage: ( /* nothing*/ ) => /* real*/ warnOnce( "GetEventDamage not yet implemented" ),
	GetEventDamageSource: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetEventDamageSource not yet implemented" ),
	GetEventDetectingPlayer: ( /* nothing*/ ) => /* player*/ warnOnce( "GetEventDetectingPlayer not yet implemented" ),
	GetEventTargetUnit: ( /* nothing*/ ) => /* unit*/ warnOnce( "GetEventTargetUnit not yet implemented" ),
	GetTriggerWidget: ( /* nothing*/ ) => /* widget*/ warnOnce( "GetTriggerWidget not yet implemented" ),
	GetTriggerDestructable: ( /* nothing*/ ) => /* destructable*/ warnOnce( "GetTriggerDestructable not yet implemented" ),
	GetItemName: whichItem => /* string*/ warnOnce( "GetItemName not yet implemented" ),
	GetHeroLevel: whichHero => /* integer*/ warnOnce( "GetHeroLevel not yet implemented" ),
	GetUnitLevel: whichUnit => /* integer*/ warnOnce( "GetUnitLevel not yet implemented" ),
	GetUnitX: whichUnit => /* real*/ warnOnce( "GetUnitX not yet implemented" ),
	GetUnitY: whichUnit => /* real*/ warnOnce( "GetUnitY not yet implemented" ),
	GetUnitLoc: whichUnit => /* location*/ warnOnce( "GetUnitLoc not yet implemented" ),
	GetUnitFacing: whichUnit => /* real*/ warnOnce( "GetUnitFacing not yet implemented" ),
	GetUnitMoveSpeed: whichUnit => /* real*/ warnOnce( "GetUnitMoveSpeed not yet implemented" ),
	GetUnitDefaultMoveSpeed: whichUnit => /* real*/ warnOnce( "GetUnitDefaultMoveSpeed not yet implemented" ),
	GetUnitState: ( /* unit*/ whichUnit, /* unitstate*/ whichUnitState ) => /* real*/ warnOnce( "GetUnitState not yet implemented" ),
	GetOwningPlayer: whichUnit => /* player*/ warnOnce( "GetOwningPlayer not yet implemented" ),
	GetUnitTypeId: whichUnit => /* integer*/ warnOnce( "GetUnitTypeId not yet implemented" ),
	GetUnitRace: whichUnit => /* race*/ warnOnce( "GetUnitRace not yet implemented" ),
	GetUnitName: whichUnit => /* string*/ warnOnce( "GetUnitName not yet implemented" ),
	GetUnitFoodUsed: whichUnit => /* integer*/ warnOnce( "GetUnitFoodUsed not yet implemented" ),
	GetUnitFoodMade: whichUnit => /* integer*/ warnOnce( "GetUnitFoodMade not yet implemented" ),
	GetFoodMade: unitId => /* integer*/ warnOnce( "GetFoodMade not yet implemented" ),
	GetFoodUsed: unitId => /* integer*/ warnOnce( "GetFoodUsed not yet implemented" ),
	GetUnitRallyPoint: whichUnit => /* location*/ warnOnce( "GetUnitRallyPoint not yet implemented" ),
	GetUnitRallyUnit: whichUnit => /* unit*/ warnOnce( "GetUnitRallyUnit not yet implemented" ),
	GetUnitRallyDestructable: whichUnit => /* destructable*/ warnOnce( "GetUnitRallyDestructable not yet implemented" ),
	IsUnitInGroup: ( /* unit*/ whichUnit, /* group*/ whichGroup ) => /* boolean*/ warnOnce( "IsUnitInGroup not yet implemented" ),
	IsUnitInForce: ( /* unit*/ whichUnit, /* force*/ whichForce ) => /* boolean*/ warnOnce( "IsUnitInForce not yet implemented" ),
	IsUnitOwnedByPlayer: ( /* unit*/ whichUnit, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsUnitOwnedByPlayer not yet implemented" ),
	IsUnitAlly: ( /* unit*/ whichUnit, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsUnitAlly not yet implemented" ),
	IsUnitEnemy: ( /* unit*/ whichUnit, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsUnitEnemy not yet implemented" ),
	IsUnitVisible: ( /* unit*/ whichUnit, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsUnitVisible not yet implemented" ),
	IsUnitDetected: ( /* unit*/ whichUnit, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsUnitDetected not yet implemented" ),
	IsUnitInvisible: ( /* unit*/ whichUnit, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsUnitInvisible not yet implemented" ),
	IsUnitFogged: ( /* unit*/ whichUnit, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsUnitFogged not yet implemented" ),
	IsUnitMasked: ( /* unit*/ whichUnit, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsUnitMasked not yet implemented" ),
	IsUnitSelected: ( /* unit*/ whichUnit, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsUnitSelected not yet implemented" ),
	IsUnitRace: ( /* unit*/ whichUnit, /* race*/ whichRace ) => /* boolean*/ warnOnce( "IsUnitRace not yet implemented" ),
	IsUnitType: ( /* unit*/ whichUnit, /* unittype*/ whichUnitType ) => /* boolean*/ warnOnce( "IsUnitType not yet implemented" ),
	IsUnit: ( /* unit*/ whichUnit, /* unit*/ whichSpecifiedUnit ) => /* boolean*/ warnOnce( "IsUnit not yet implemented" ),
	IsUnitInRange: ( /* unit*/ whichUnit, /* unit*/ otherUnit, /* real*/ distance ) => /* boolean*/ warnOnce( "IsUnitInRange not yet implemented" ),
	IsUnitInRangeXY: ( /* unit*/ whichUnit, /* real*/ x, /* real*/ y, /* real*/ distance ) => /* boolean*/ warnOnce( "IsUnitInRangeXY not yet implemented" ),
	IsUnitInRangeLoc: ( /* unit*/ whichUnit, /* location*/ whichLocation, /* real*/ distance ) => /* boolean*/ warnOnce( "IsUnitInRangeLoc not yet implemented" ),
	IsUnitHidden: whichUnit => /* boolean*/ warnOnce( "IsUnitHidden not yet implemented" ),
	IsUnitIllusion: whichUnit => /* boolean*/ warnOnce( "IsUnitIllusion not yet implemented" ),
	IsUnitInTransport: ( /* unit*/ whichUnit, /* unit*/ whichTransport ) => /* boolean*/ warnOnce( "IsUnitInTransport not yet implemented" ),
	IsUnitLoaded: whichUnit => /* boolean*/ warnOnce( "IsUnitLoaded not yet implemented" ),
	IsHeroUnitId: unitId => /* boolean*/ warnOnce( "IsHeroUnitId not yet implemented" ),
	IsUnitIdType: ( /* integer*/ unitId, /* unittype*/ whichUnitType ) => /* boolean*/ warnOnce( "IsUnitIdType not yet implemented" ),
	GetLocalPlayer: ( /* nothing*/ ) => /* player*/ warnOnce( "GetLocalPlayer not yet implemented" ),
	IsPlayerAlly: ( /* player*/ whichPlayer, /* player*/ otherPlayer ) => /* boolean*/ warnOnce( "IsPlayerAlly not yet implemented" ),
	IsPlayerEnemy: ( /* player*/ whichPlayer, /* player*/ otherPlayer ) => /* boolean*/ warnOnce( "IsPlayerEnemy not yet implemented" ),
	IsPlayerInForce: ( /* player*/ whichPlayer, /* force*/ whichForce ) => /* boolean*/ warnOnce( "IsPlayerInForce not yet implemented" ),
	IsPlayerObserver: whichPlayer => /* boolean*/ warnOnce( "IsPlayerObserver not yet implemented" ),
	IsVisibleToPlayer: ( /* real*/ x, /* real*/ y, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsVisibleToPlayer not yet implemented" ),
	IsLocationVisibleToPlayer: ( /* location*/ whichLocation, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsLocationVisibleToPlayer not yet implemented" ),
	IsFoggedToPlayer: ( /* real*/ x, /* real*/ y, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsFoggedToPlayer not yet implemented" ),
	IsLocationFoggedToPlayer: ( /* location*/ whichLocation, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsLocationFoggedToPlayer not yet implemented" ),
	IsMaskedToPlayer: ( /* real*/ x, /* real*/ y, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsMaskedToPlayer not yet implemented" ),
	IsLocationMaskedToPlayer: ( /* location*/ whichLocation, /* player*/ whichPlayer ) => /* boolean*/ warnOnce( "IsLocationMaskedToPlayer not yet implemented" ),
	GetPlayerRace: whichPlayer => /* race*/ warnOnce( "GetPlayerRace not yet implemented" ),
	GetPlayerId: whichPlayer => /* integer*/ warnOnce( "GetPlayerId not yet implemented" ),
	GetPlayerUnitCount: ( /* player*/ whichPlayer, /* boolean*/ includeIncomplete ) => /* integer*/ warnOnce( "GetPlayerUnitCount not yet implemented" ),
	GetPlayerTypedUnitCount: ( /* player*/ whichPlayer, /* string*/ unitName, /* boolean*/ includeIncomplete, /* boolean*/ includeUpgrades ) => /* integer*/ warnOnce( "GetPlayerTypedUnitCount not yet implemented" ),
	GetPlayerStructureCount: ( /* player*/ whichPlayer, /* boolean*/ includeIncomplete ) => /* integer*/ warnOnce( "GetPlayerStructureCount not yet implemented" ),
	GetPlayerState: ( /* player*/ whichPlayer, /* playerstate*/ whichPlayerState ) => /* integer*/ warnOnce( "GetPlayerState not yet implemented" ),
	GetPlayerScore: ( /* player*/ whichPlayer, /* playerscore*/ whichPlayerScore ) => /* integer*/ warnOnce( "GetPlayerScore not yet implemented" ),
	GetPlayerAlliance: ( /* player*/ sourcePlayer, /* player*/ otherPlayer, /* alliancetype*/ whichAllianceSetting ) => /* boolean*/ warnOnce( "GetPlayerAlliance not yet implemented" ),
	GetPlayerHandicap: whichPlayer => /* real*/ warnOnce( "GetPlayerHandicap not yet implemented" ),
	GetPlayerHandicapXP: whichPlayer => /* real*/ warnOnce( "GetPlayerHandicapXP not yet implemented" ),
	SetPlayerHandicap: ( /* player*/ whichPlayer, /* real*/ handicap ) => /* nothing*/ warnOnce( "SetPlayerHandicap not yet implemented" ),
	SetPlayerHandicapXP: ( /* player*/ whichPlayer, /* real*/ handicap ) => /* nothing*/ warnOnce( "SetPlayerHandicapXP not yet implemented" ),
	SetPlayerTechMaxAllowed: ( /* player*/ whichPlayer, /* integer*/ techid, /* integer*/ maximum ) => /* nothing*/ warnOnce( "SetPlayerTechMaxAllowed not yet implemented" ),
	GetPlayerTechMaxAllowed: ( /* player*/ whichPlayer, /* integer*/ techid ) => /* integer*/ warnOnce( "GetPlayerTechMaxAllowed not yet implemented" ),
	AddPlayerTechResearched: ( /* player*/ whichPlayer, /* integer*/ techid, /* integer*/ levels ) => /* nothing*/ warnOnce( "AddPlayerTechResearched not yet implemented" ),
	SetPlayerTechResearched: ( /* player*/ whichPlayer, /* integer*/ techid, /* integer*/ setToLevel ) => /* nothing*/ warnOnce( "SetPlayerTechResearched not yet implemented" ),
	GetPlayerTechResearched: ( /* player*/ whichPlayer, /* integer*/ techid, /* boolean*/ specificonly ) => /* boolean*/ warnOnce( "GetPlayerTechResearched not yet implemented" ),
	GetPlayerTechCount: ( /* player*/ whichPlayer, /* integer*/ techid, /* boolean*/ specificonly ) => /* integer*/ warnOnce( "GetPlayerTechCount not yet implemented" ),
	GetIntegerGameState: whichIntegerGameState => /* integer*/ warnOnce( "GetIntegerGameState not yet implemented" ),
	GetCameraBoundMinX: ( /* nothing*/ ) => /* real*/ warnOnce( "GetCameraBoundMinX not yet implemented" ),
	GetCameraBoundMinY: ( /* nothing*/ ) => /* real*/ warnOnce( "GetCameraBoundMinY not yet implemented" ),
	GetCameraBoundMaxX: ( /* nothing*/ ) => /* real*/ warnOnce( "GetCameraBoundMaxX not yet implemented" ),
	GetCameraBoundMaxY: ( /* nothing*/ ) => /* real*/ warnOnce( "GetCameraBoundMaxY not yet implemented" ),
	GetCameraField: whichField => /* real*/ warnOnce( "GetCameraField not yet implemented" ),
	GetCameraTargetPositionX: ( /* nothing*/ ) => /* real*/ warnOnce( "GetCameraTargetPositionX not yet implemented" ),
	GetCameraTargetPositionY: ( /* nothing*/ ) => /* real*/ warnOnce( "GetCameraTargetPositionY not yet implemented" ),
	GetCameraTargetPositionZ: ( /* nothing*/ ) => /* real*/ warnOnce( "GetCameraTargetPositionZ not yet implemented" ),
	GetCameraTargetPositionLoc: ( /* nothing*/ ) => /* location*/ warnOnce( "GetCameraTargetPositionLoc not yet implemented" ),
	GetCameraEyePositionX: ( /* nothing*/ ) => /* real*/ warnOnce( "GetCameraEyePositionX not yet implemented" ),
	GetCameraEyePositionY: ( /* nothing*/ ) => /* real*/ warnOnce( "GetCameraEyePositionY not yet implemented" ),
	GetCameraEyePositionZ: ( /* nothing*/ ) => /* real*/ warnOnce( "GetCameraEyePositionZ not yet implemented" ),
	GetCameraEyePositionLoc: ( /* nothing*/ ) => /* location*/ warnOnce( "GetCameraEyePositionLoc not yet implemented" ),
	Deg2Rad: degrees => /* real*/ warnOnce( "Deg2Rad not yet implemented" ),
	Rad2Deg: radians => /* real*/ warnOnce( "Rad2Deg not yet implemented" ),
	Sin: radians => /* real*/ warnOnce( "Sin not yet implemented" ),
	Cos: radians => /* real*/ warnOnce( "Cos not yet implemented" ),
	Tan: radians => /* real*/ warnOnce( "Tan not yet implemented" ),
	Asin: y => /* real*/ warnOnce( "Asin not yet implemented" ),
	Acos: x => /* real*/ warnOnce( "Acos not yet implemented" ),
	Atan: x => /* real*/ warnOnce( "Atan not yet implemented" ),
	Atan2: ( /* real*/ y, /* real*/ x ) => /* real*/ warnOnce( "Atan2 not yet implemented" ),
	SquareRoot: x => /* real*/ warnOnce( "SquareRoot not yet implemented" ),
	Pow: ( /* real*/ x, /* real*/ power ) => /* real*/ warnOnce( "Pow not yet implemented" ),
	I2R: i => /* real*/ warnOnce( "I2R not yet implemented" ),
	R2I: r => /* integer*/ warnOnce( "R2I not yet implemented" ),
	I2S: i => /* string*/ warnOnce( "I2S not yet implemented" ),
	R2S: r => /* string*/ warnOnce( "R2S not yet implemented" ),
	R2SW: ( /* real*/ r, /* integer*/ width, /* integer*/ precision ) => /* string*/ warnOnce( "R2SW not yet implemented" ),
	S2I: s => /* integer*/ warnOnce( "S2I not yet implemented" ),
	S2R: s => /* real*/ warnOnce( "S2R not yet implemented" ),
	GetHandleId: h => /* integer*/ warnOnce( "GetHandleId not yet implemented" ),
	SubString: ( /* string*/ source, /* integer*/ start, /* integer*/ end ) => /* string*/ warnOnce( "SubString not yet implemented" ),
	StringLength: s => /* integer*/ warnOnce( "StringLength not yet implemented" ),
	StringCase: ( /* string*/ source, /* boolean*/ upper ) => /* string*/ warnOnce( "StringCase not yet implemented" ),
	StringHash: s => /* integer*/ warnOnce( "StringHash not yet implemented" ),
	GetLocalizedString: source => /* string*/ warnOnce( "GetLocalizedString not yet implemented" ),
	GetLocalizedHotkey: source => /* integer*/ warnOnce( "GetLocalizedHotkey not yet implemented" ),
	SetMapName: name => /* nothing*/ warnOnce( "SetMapName not yet implemented" ),
	SetMapDescription: description => /* nothing*/ warnOnce( "SetMapDescription not yet implemented" ),
	SetTeams: teamcount => /* nothing*/ warnOnce( "SetTeams not yet implemented" ),
	SetPlayers: playercount => /* nothing*/ warnOnce( "SetPlayers not yet implemented" ),
	DefineStartLocation: ( /* integer*/ whichStartLoc, /* real*/ x, /* real*/ y ) => /* nothing*/ warnOnce( "DefineStartLocation not yet implemented" ),
	DefineStartLocationLoc: ( /* integer*/ whichStartLoc, /* location*/ whichLocation ) => /* nothing*/ warnOnce( "DefineStartLocationLoc not yet implemented" ),
	SetStartLocPrioCount: ( /* integer*/ whichStartLoc, /* integer*/ prioSlotCount ) => /* nothing*/ warnOnce( "SetStartLocPrioCount not yet implemented" ),
	SetStartLocPrio: ( /* integer*/ whichStartLoc, /* integer*/ prioSlotIndex, /* integer*/ otherStartLocIndex, /* startlocprio*/ priority ) => /* nothing*/ warnOnce( "SetStartLocPrio not yet implemented" ),
	GetStartLocPrioSlot: ( /* integer*/ whichStartLoc, /* integer*/ prioSlotIndex ) => /* integer*/ warnOnce( "GetStartLocPrioSlot not yet implemented" ),
	GetStartLocPrio: ( /* integer*/ whichStartLoc, /* integer*/ prioSlotIndex ) => /* startlocprio*/ warnOnce( "GetStartLocPrio not yet implemented" ),
	SetGameTypeSupported: ( /* gametype*/ whichGameType, /* boolean*/ value ) => /* nothing*/ warnOnce( "SetGameTypeSupported not yet implemented" ),
	SetMapFlag: ( /* mapflag*/ whichMapFlag, /* boolean*/ value ) => /* nothing*/ warnOnce( "SetMapFlag not yet implemented" ),
	SetGamePlacement: whichPlacementType => /* nothing*/ warnOnce( "SetGamePlacement not yet implemented" ),
	SetGameSpeed: whichspeed => /* nothing*/ warnOnce( "SetGameSpeed not yet implemented" ),
	SetGameDifficulty: whichdifficulty => /* nothing*/ warnOnce( "SetGameDifficulty not yet implemented" ),
	SetResourceDensity: whichdensity => /* nothing*/ warnOnce( "SetResourceDensity not yet implemented" ),
	SetCreatureDensity: whichdensity => /* nothing*/ warnOnce( "SetCreatureDensity not yet implemented" ),
	GetTeams: ( /* nothing*/ ) => /* integer*/ warnOnce( "GetTeams not yet implemented" ),
	GetPlayers: ( /* nothing*/ ) => /* integer*/ warnOnce( "GetPlayers not yet implemented" ),
	IsGameTypeSupported: whichGameType => /* boolean*/ warnOnce( "IsGameTypeSupported not yet implemented" ),
	GetGameTypeSelected: ( /* nothing*/ ) => /* gametype*/ warnOnce( "GetGameTypeSelected not yet implemented" ),
	IsMapFlagSet: whichMapFlag => /* boolean*/ warnOnce( "IsMapFlagSet not yet implemented" ),
	SetPlayerTeam: ( /* player*/ whichPlayer, /* integer*/ whichTeam ) => /* nothing*/ warnOnce( "SetPlayerTeam not yet implemented" ),
	SetPlayerStartLocation: ( /* player*/ whichPlayer, /* integer*/ startLocIndex ) => /* nothing*/ warnOnce( "SetPlayerStartLocation not yet implemented" ),
	ForcePlayerStartLocation: ( /* player*/ whichPlayer, /* integer*/ startLocIndex ) => /* nothing */ warnOnce( "ForcePlayerStartLocation not yet implemented" ),
	SetPlayerColor: ( /* player*/ whichPlayer, /* playercolor*/ color ) => /* nothing*/ warnOnce( "SetPlayerColor not yet implemented" ),
	SetPlayerAlliance: ( /* player*/ sourcePlayer, /* player*/ otherPlayer, /* alliancetype*/ whichAllianceSetting, /* boolean*/ value ) => /* nothing*/ warnOnce( "SetPlayerAlliance not yet implemented" ),
	SetPlayerTaxRate: ( /* player*/ sourcePlayer, /* player*/ otherPlayer, /* playerstate*/ whichResource, /* integer*/ rate ) => /* nothing*/ warnOnce( "SetPlayerTaxRate not yet implemented" ),
	SetPlayerRacePreference: ( /* player*/ whichPlayer, /* racepreference*/ whichRacePreference ) => /* nothing*/ warnOnce( "SetPlayerRacePreference not yet implemented" ),
	SetPlayerRaceSelectable: ( /* player*/ whichPlayer, /* boolean*/ value ) => /* nothing*/ warnOnce( "SetPlayerRaceSelectable not yet implemented" ),
	SetPlayerController: ( /* player*/ whichPlayer, /* mapcontrol*/ controlType ) => /* nothing*/ warnOnce( "SetPlayerController not yet implemented" ),
	SetPlayerName: ( /* player*/ whichPlayer, /* string*/ name ) => /* nothing*/ warnOnce( "SetPlayerName not yet implemented" ),
	SetPlayerOnScoreScreen: ( /* player*/ whichPlayer, /* boolean*/ flag ) => /* nothing*/ warnOnce( "SetPlayerOnScoreScreen not yet implemented" ),
	GetPlayerTeam: whichPlayer => /* integer*/ warnOnce( "GetPlayerTeam not yet implemented" ),
	GetPlayerStartLocation: whichPlayer => /* integer*/ warnOnce( "GetPlayerStartLocation not yet implemented" ),
	GetPlayerColor: whichPlayer => /* playercolor*/ warnOnce( "GetPlayerColor not yet implemented" ),
	GetPlayerSelectable: whichPlayer => /* boolean*/ warnOnce( "GetPlayerSelectable not yet implemented" ),
	GetPlayerController: whichPlayer => /* mapcontrol*/ warnOnce( "GetPlayerController not yet implemented" ),
	GetPlayerSlotState: whichPlayer => /* playerslotstate*/ warnOnce( "GetPlayerSlotState not yet implemented" ),
	GetPlayerTaxRate: ( /* player*/ sourcePlayer, /* player*/ otherPlayer, /* playerstate*/ whichResource ) => /* integer*/ warnOnce( "GetPlayerTaxRate not yet implemented" ),
	IsPlayerRacePrefSet: ( /* player*/ whichPlayer, /* racepreference*/ pref ) => /* boolean*/ warnOnce( "IsPlayerRacePrefSet not yet implemented" ),
	GetPlayerName: whichPlayer => /* string*/ warnOnce( "GetPlayerName not yet implemented" ),
	DestroyTimer: whichTimer => /* nothing*/ warnOnce( "DestroyTimer not yet implemented" ),
	TimerStart: ( /* timer*/ whichTimer, /* real*/ timeout, /* boolean*/ periodic, /* code*/ handlerFunc ) => /* nothing*/ warnOnce( "TimerStart not yet implemented" ),
	TimerGetElapsed: whichTimer => /* real*/ warnOnce( "TimerGetElapsed not yet implemented" ),
	TimerGetRemaining: whichTimer => /* real*/ warnOnce( "TimerGetRemaining not yet implemented" ),
	TimerGetTimeout: whichTimer => /* real*/ warnOnce( "TimerGetTimeout not yet implemented" ),
	PauseTimer: whichTimer => /* nothing*/ warnOnce( "PauseTimer not yet implemented" ),
	ResumeTimer: whichTimer => /* nothing*/ warnOnce( "ResumeTimer not yet implemented" ),
	GetExpiredTimer: ( /* nothing*/ ) => /* timer*/ warnOnce( "GetExpiredTimer not yet implemented" ),
	DestroyGroup: whichGroup => /* nothing*/ warnOnce( "DestroyGroup not yet implemented" ),
	GroupAddUnit: ( /* group*/ whichGroup, /* unit*/ whichUnit ) => /* nothing*/ warnOnce( "GroupAddUnit not yet implemented" ),
	GroupRemoveUnit: ( /* group*/ whichGroup, /* unit*/ whichUnit ) => /* nothing*/ warnOnce( "GroupRemoveUnit not yet implemented" ),
	GroupClear: whichGroup => /* nothing*/ warnOnce( "GroupClear not yet implemented" ),
	GroupEnumUnitsOfType: ( /* group*/ whichGroup, /* string*/ unitname, /* boolexpr*/ filter ) => /* nothing*/ warnOnce( "GroupEnumUnitsOfType not yet implemented" ),
	GroupEnumUnitsOfPlayer: ( /* group*/ whichGroup, /* player*/ whichPlayer, /* boolexpr*/ filter ) => /* nothing*/ warnOnce( "GroupEnumUnitsOfPlayer not yet implemented" ),
	GroupEnumUnitsOfTypeCounted: ( /* group*/ whichGroup, /* string*/ unitname, /* boolexpr*/ filter, /* integer*/ countLimit ) => /* nothing*/ warnOnce( "GroupEnumUnitsOfTypeCounted not yet implemented" ),
	GroupEnumUnitsInRect: ( /* group*/ whichGroup, /* rect*/ r, /* boolexpr*/ filter ) => /* nothing*/ warnOnce( "GroupEnumUnitsInRect not yet implemented" ),
	GroupEnumUnitsInRectCounted: ( /* group*/ whichGroup, /* rect*/ r, /* boolexpr*/ filter, /* integer*/ countLimit ) => /* nothing*/ warnOnce( "GroupEnumUnitsInRectCounted not yet implemented" ),
	GroupEnumUnitsInRange: ( /* group*/ whichGroup, /* real*/ x, /* real*/ y, /* real*/ radius, /* boolexpr*/ filter ) => /* nothing*/ warnOnce( "GroupEnumUnitsInRange not yet implemented" ),
	GroupEnumUnitsInRangeOfLoc: ( /* group*/ whichGroup, /* location*/ whichLocation, /* real*/ radius, /* boolexpr*/ filter ) => /* nothing*/ warnOnce( "GroupEnumUnitsInRangeOfLoc not yet implemented" ),
	GroupEnumUnitsInRangeCounted: ( /* group*/ whichGroup, /* real*/ x, /* real*/ y, /* real*/ radius, /* boolexpr*/ filter, /* integer*/ countLimit ) => /* nothing*/ warnOnce( "GroupEnumUnitsInRangeCounted not yet implemented" ),
	GroupEnumUnitsInRangeOfLocCounted: ( /* group*/ whichGroup, /* location*/ whichLocation, /* real*/ radius, /* boolexpr*/ filter, /* integer*/ countLimit ) => /* nothing*/ warnOnce( "GroupEnumUnitsInRangeOfLocCounted not yet implemented" ),
	GroupEnumUnitsSelected: ( /* group*/ whichGroup, /* player*/ whichPlayer, /* boolexpr*/ filter ) => /* nothing*/ warnOnce( "GroupEnumUnitsSelected not yet implemented" ),
	GroupImmediateOrder: ( /* group*/ whichGroup, /* string*/ order ) => /* boolean*/ warnOnce( "GroupImmediateOrder not yet implemented" ),
	GroupImmediateOrderById: ( /* group*/ whichGroup, /* integer*/ order ) => /* boolean*/ warnOnce( "GroupImmediateOrderById not yet implemented" ),
	GroupPointOrder: ( /* group*/ whichGroup, /* string*/ order, /* real*/ x, /* real*/ y ) => /* boolean*/ warnOnce( "GroupPointOrder not yet implemented" ),
	GroupPointOrderLoc: ( /* group*/ whichGroup, /* string*/ order, /* location*/ whichLocation ) => /* boolean*/ warnOnce( "GroupPointOrderLoc not yet implemented" ),
	GroupPointOrderById: ( /* group*/ whichGroup, /* integer*/ order, /* real*/ x, /* real*/ y ) => /* boolean*/ warnOnce( "GroupPointOrderById not yet implemented" ),
	GroupPointOrderByIdLoc: ( /* group*/ whichGroup, /* integer*/ order, /* location*/ whichLocation ) => /* boolean*/ warnOnce( "GroupPointOrderByIdLoc not yet implemented" ),
	GroupTargetOrder: ( /* group*/ whichGroup, /* string*/ order, /* widget*/ targetWidget ) => /* boolean*/ warnOnce( "GroupTargetOrder not yet implemented" ),
	GroupTargetOrderById: ( /* group*/ whichGroup, /* integer*/ order, /* widget*/ targetWidget ) => /* boolean*/ warnOnce( "GroupTargetOrderById not yet implemented" ),
	ForGroup: ( /* group*/ whichGroup, /* code*/ callback ) => /* nothing*/ warnOnce( "ForGroup not yet implemented" ),
	FirstOfGroup: whichGroup => /* unit*/ warnOnce( "FirstOfGroup not yet implemented" ),
	DestroyForce: whichForce => /* nothing*/ warnOnce( "DestroyForce not yet implemented" ),
	ForceAddPlayer: ( /* force*/ whichForce, /* player*/ whichPlayer ) => /* nothing*/ warnOnce( "ForceAddPlayer not yet implemented" ),
	ForceRemovePlayer: ( /* force*/ whichForce, /* player*/ whichPlayer ) => /* nothing*/ warnOnce( "ForceRemovePlayer not yet implemented" ),
	ForceClear: whichForce => /* nothing*/ warnOnce( "ForceClear not yet implemented" ),
	ForceEnumPlayers: ( /* force*/ whichForce, /* boolexpr*/ filter ) => /* nothing*/ warnOnce( "ForceEnumPlayers not yet implemented" ),
	ForceEnumPlayersCounted: ( /* force*/ whichForce, /* boolexpr*/ filter, /* integer*/ countLimit ) => /* nothing*/ warnOnce( "ForceEnumPlayersCounted not yet implemented" ),
	ForceEnumAllies: ( /* force*/ whichForce, /* player*/ whichPlayer, /* boolexpr*/ filter ) => /* nothing*/ warnOnce( "ForceEnumAllies not yet implemented" ),
	ForceEnumEnemies: ( /* force*/ whichForce, /* player*/ whichPlayer, /* boolexpr*/ filter ) => /* nothing*/ warnOnce( "ForceEnumEnemies not yet implemented" ),
	ForForce: ( /* force*/ whichForce, /* code*/ callback ) => /* nothing*/ warnOnce( "ForForce not yet implemented" ),
	Rect: ( /* real*/ minx, /* real*/ miny, /* real*/ maxx, /* real*/ maxy ) => /* rect*/ warnOnce( "Rect not yet implemented" ),
	RectFromLoc: ( /* location*/ min, /* location*/ max ) => /* rect*/ warnOnce( "RectFromLoc not yet implemented" ),
	RemoveRect: whichRect => /* nothing*/ warnOnce( "RemoveRect not yet implemented" ),
	SetRect: ( /* rect*/ whichRect, /* real*/ minx, /* real*/ miny, /* real*/ maxx, /* real*/ maxy ) => /* nothing*/ warnOnce( "SetRect not yet implemented" ),
	SetRectFromLoc: ( /* rect*/ whichRect, /* location*/ min, /* location*/ max ) => /* nothing*/ warnOnce( "SetRectFromLoc not yet implemented" ),
	MoveRectTo: ( /* rect*/ whichRect, /* real*/ newCenterX, /* real*/ newCenterY ) => /* nothing*/ warnOnce( "MoveRectTo not yet implemented" ),
	MoveRectToLoc: ( /* rect*/ whichRect, /* location*/ newCenterLoc ) => /* nothing*/ warnOnce( "MoveRectToLoc not yet implemented" ),
	GetRectCenterX: whichRect => /* real*/ warnOnce( "GetRectCenterX not yet implemented" ),
	GetRectCenterY: whichRect => /* real*/ warnOnce( "GetRectCenterY not yet implemented" ),
	GetRectMinX: whichRect => /* real*/ warnOnce( "GetRectMinX not yet implemented" ),
	GetRectMinY: whichRect => /* real*/ warnOnce( "GetRectMinY not yet implemented" ),
	GetRectMaxX: whichRect => /* real*/ warnOnce( "GetRectMaxX not yet implemented" ),
	GetRectMaxY: whichRect => /* real*/ warnOnce( "GetRectMaxY not yet implemented" ),
	CreateRegion: ( /* nothing*/ ) => /* region*/ warnOnce( "CreateRegion not yet implemented" ),
	RemoveRegion: whichRegion => /* nothing*/ warnOnce( "RemoveRegion not yet implemented" ),
	RegionAddRect: ( /* region*/ whichRegion, /* rect*/ r ) => /* nothing*/ warnOnce( "RegionAddRect not yet implemented" ),
	RegionClearRect: ( /* region*/ whichRegion, /* rect*/ r ) => /* nothing*/ warnOnce( "RegionClearRect not yet implemented" ),
	RegionAddCell: ( /* region*/ whichRegion, /* real*/ x, /* real*/ y ) => /* nothing*/ warnOnce( "RegionAddCell not yet implemented" ),
	RegionAddCellAtLoc: ( /* region*/ whichRegion, /* location*/ whichLocation ) => /* nothing*/ warnOnce( "RegionAddCellAtLoc not yet implemented" ),
	RegionClearCell: ( /* region*/ whichRegion, /* real*/ x, /* real*/ y ) => /* nothing*/ warnOnce( "RegionClearCell not yet implemented" ),
	RegionClearCellAtLoc: ( /* region*/ whichRegion, /* location*/ whichLocation ) => /* nothing*/ warnOnce( "RegionClearCellAtLoc not yet implemented" ),
	Location: ( /* real*/ x, /* real*/ y ) => /* location*/ warnOnce( "Location not yet implemented" ),
	RemoveLocation: whichLocation => /* nothing*/ warnOnce( "RemoveLocation not yet implemented" ),
	MoveLocation: ( /* location*/ whichLocation, /* real*/ newX, /* real*/ newY ) => /* nothing*/ warnOnce( "MoveLocation not yet implemented" ),
	GetLocationX: whichLocation => /* real*/ warnOnce( "GetLocationX not yet implemented" ),
	GetLocationY: whichLocation => /* real*/ warnOnce( "GetLocationY not yet implemented" ),
	GetLocationZ: whichLocation => /* real*/ warnOnce( "GetLocationZ not yet implemented" ),
	IsUnitInRegion: ( /* region*/ whichRegion, /* unit*/ whichUnit ) => /* boolean*/ warnOnce( "IsUnitInRegion not yet implemented" ),
	IsPointInRegion: ( /* region*/ whichRegion, /* real*/ x, /* real*/ y ) => /* boolean*/ warnOnce( "IsPointInRegion not yet implemented" ),
	IsLocationInRegion: ( /* region*/ whichRegion, /* location*/ whichLocation ) => /* boolean*/ warnOnce( "IsLocationInRegion not yet implemented" ),
	GetWorldBounds: ( /* nothing*/ ) => /* rect*/ warnOnce( "GetWorldBounds not yet implemented" ),
	CreateTrigger: ( /* nothing*/ ) => /* trigger*/ warnOnce( "CreateTrigger not yet implemented" ),
	DestroyTrigger: whichTrigger => /* nothing*/ warnOnce( "DestroyTrigger not yet implemented" ),
	ResetTrigger: whichTrigger => /* nothing*/ warnOnce( "ResetTrigger not yet implemented" ),
	EnableTrigger: whichTrigger => /* nothing*/ warnOnce( "EnableTrigger not yet implemented" ),
	DisableTrigger: whichTrigger => /* nothing*/ warnOnce( "DisableTrigger not yet implemented" ),
	IsTriggerEnabled: whichTrigger => /* boolean*/ warnOnce( "IsTriggerEnabled not yet implemented" ),
	TriggerWaitOnSleeps: ( /* trigger*/ whichTrigger, /* boolean*/ flag ) => /* nothing*/ warnOnce( "TriggerWaitOnSleeps not yet implemented" ),
	IsTriggerWaitOnSleeps: whichTrigger => /* boolean*/ warnOnce( "IsTriggerWaitOnSleeps not yet implemented" ),
	ExecuteFunc: funcName => /* nothing*/ warnOnce( "ExecuteFunc not yet implemented" ),
	And: ( /* boolexpr*/ operandA, /* boolexpr*/ operandB ) => /* boolexpr*/ warnOnce( "And not yet implemented" ),
	Or: ( /* boolexpr*/ operandA, /* boolexpr*/ operandB ) => /* boolexpr*/ warnOnce( "Or not yet implemented" ),
	Not: operand => /* boolexpr*/ warnOnce( "Not not yet implemented" ),
	Condition: func => /* conditionfunc*/ warnOnce( "Condition not yet implemented" ),
	DestroyCondition: c => /* nothing*/ warnOnce( "DestroyCondition not yet implemented" ),
	Filter: func => /* filterfunc*/ warnOnce( "Filter not yet implemented" ),
	DestroyFilter: f => /* nothing*/ warnOnce( "DestroyFilter not yet implemented" ),
	DestroyBoolExpr: e => /* nothing*/ warnOnce( "DestroyBoolExpr not yet implemented" ),
	TriggerRegisterVariableEvent: ( /* trigger*/ whichTrigger, /* string*/ varName, /* limitop*/ opcode, /* real*/ limitval ) => /* event*/ warnOnce( "TriggerRegisterVariableEvent not yet implemented" ),
	TriggerRegisterTimerEvent: ( /* trigger*/ whichTrigger, /* real*/ timeout, /* boolean*/ periodic ) => /* event*/ warnOnce( "TriggerRegisterTimerEvent not yet implemented" ),
	TriggerRegisterTimerExpireEvent: ( /* trigger*/ whichTrigger, /* timer*/ t ) => /* event*/ warnOnce( "TriggerRegisterTimerExpireEvent not yet implemented" ),
	TriggerRegisterGameStateEvent: ( /* trigger*/ whichTrigger, /* gamestate*/ whichState, /* limitop*/ opcode, /* real*/ limitval ) => /* event*/ warnOnce( "TriggerRegisterGameStateEvent not yet implemented" ),
	TriggerRegisterDialogEvent: ( /* trigger*/ whichTrigger, /* dialog*/ whichDialog ) => /* event*/ warnOnce( "TriggerRegisterDialogEvent not yet implemented" ),
	TriggerRegisterDialogButtonEvent: ( /* trigger*/ whichTrigger, /* button*/ whichButton ) => /* event*/ warnOnce( "TriggerRegisterDialogButtonEvent not yet implemented" ),
	TriggerRegisterGameEvent: ( /* trigger*/ whichTrigger, /* gameevent*/ whichGameEvent ) => /* event*/ warnOnce( "TriggerRegisterGameEvent not yet implemented" ),
	TriggerRegisterEnterRegion: ( /* trigger*/ whichTrigger, /* region*/ whichRegion, /* boolexpr*/ filter ) => /* event*/ warnOnce( "TriggerRegisterEnterRegion not yet implemented" ),
	TriggerRegisterLeaveRegion: ( /* trigger*/ whichTrigger, /* region*/ whichRegion, /* boolexpr*/ filter ) => /* event*/ warnOnce( "TriggerRegisterLeaveRegion not yet implemented" ),
	TriggerRegisterTrackableHitEvent: ( /* trigger*/ whichTrigger, /* trackable*/ t ) => /* event*/ warnOnce( "TriggerRegisterTrackableHitEvent not yet implemented" ),
	TriggerRegisterTrackableTrackEvent: ( /* trigger*/ whichTrigger, /* trackable*/ t ) => /* event*/ warnOnce( "TriggerRegisterTrackableTrackEvent not yet implemented" ),
	TriggerRegisterPlayerEvent: ( /* trigger*/ whichTrigger, /* player*/ whichPlayer, /* playerevent*/ whichPlayerEvent ) => /* event*/ warnOnce( "TriggerRegisterPlayerEvent not yet implemented" ),
	TriggerRegisterPlayerUnitEvent: ( /* trigger*/ whichTrigger, /* player*/ whichPlayer, /* playerunitevent*/ whichPlayerUnitEvent, /* boolexpr*/ filter ) => /* event*/ warnOnce( "TriggerRegisterPlayerUnitEvent not yet implemented" ),
	TriggerRegisterPlayerAllianceChange: ( /* trigger*/ whichTrigger, /* player*/ whichPlayer, /* alliancetype*/ whichAlliance ) => /* event*/ warnOnce( "TriggerRegisterPlayerAllianceChange not yet implemented" ),
	TriggerRegisterPlayerStateEvent: ( /* trigger*/ whichTrigger, /* player*/ whichPlayer, /* playerstate*/ whichState, /* limitop*/ opcode, /* real*/ limitval ) => /* event*/ warnOnce( "TriggerRegisterPlayerStateEvent not yet implemented" ),
	TriggerRegisterPlayerChatEvent: ( /* trigger*/ whichTrigger, /* player*/ whichPlayer, /* string*/ chatMessageToDetect, /* boolean*/ exactMatchOnly ) => /* event*/ warnOnce( "TriggerRegisterPlayerChatEvent not yet implemented" ),
	TriggerRegisterDeathEvent: ( /* trigger*/ whichTrigger, /* widget*/ whichWidget ) => /* event*/ warnOnce( "TriggerRegisterDeathEvent not yet implemented" ),
	TriggerRegisterUnitStateEvent: ( /* trigger*/ whichTrigger, /* unit*/ whichUnit, /* unitstate*/ whichState, /* limitop*/ opcode, /* real*/ limitval ) => /* event*/ warnOnce( "TriggerRegisterUnitStateEvent not yet implemented" ),
	TriggerRegisterUnitEvent: ( /* trigger*/ whichTrigger, /* unit*/ whichUnit, /* unitevent*/ whichEvent ) => /* event*/ warnOnce( "TriggerRegisterUnitEvent not yet implemented" ),
	TriggerRegisterFilterUnitEvent: ( /* trigger*/ whichTrigger, /* unit*/ whichUnit, /* unitevent*/ whichEvent, /* boolexpr*/ filter ) => /* event*/ warnOnce( "TriggerRegisterFilterUnitEvent not yet implemented" ),
	TriggerRegisterUnitInRange: ( /* trigger*/ whichTrigger, /* unit*/ whichUnit, /* real*/ range, /* boolexpr*/ filter ) => /* event*/ warnOnce( "TriggerRegisterUnitInRange not yet implemented" ),
	TriggerAddCondition: ( /* trigger*/ whichTrigger, /* boolexpr*/ condition ) => /* triggercondition*/ warnOnce( "TriggerAddCondition not yet implemented" ),
	TriggerRemoveCondition: ( /* trigger*/ whichTrigger, /* triggercondition*/ whichCondition ) => /* nothing*/ warnOnce( "TriggerRemoveCondition not yet implemented" ),
	TriggerClearConditions: whichTrigger => /* nothing*/ warnOnce( "TriggerClearConditions not yet implemented" ),
	TriggerAddAction: ( /* trigger*/ whichTrigger, /* code*/ actionFunc ) => /* triggeraction*/ warnOnce( "TriggerAddAction not yet implemented" ),
	TriggerRemoveAction: ( /* trigger*/ whichTrigger, /* triggeraction*/ whichAction ) => /* nothing*/ warnOnce( "TriggerRemoveAction not yet implemented" ),
	TriggerClearActions: whichTrigger => /* nothing*/ warnOnce( "TriggerClearActions not yet implemented" ),
	TriggerSleepAction: timeout => /* nothing*/ warnOnce( "TriggerSleepAction not yet implemented" ),
	TriggerWaitForSound: ( /* sound*/ s, /* real*/ offset ) => /* nothing*/ warnOnce( "TriggerWaitForSound not yet implemented" ),
	TriggerEvaluate: whichTrigger => /* boolean*/ warnOnce( "TriggerEvaluate not yet implemented" ),
	TriggerExecute: whichTrigger => /* nothing*/ warnOnce( "TriggerExecute not yet implemented" ),
	TriggerExecuteWait: whichTrigger => /* nothing*/ warnOnce( "TriggerExecuteWait not yet implemented" ),
	TriggerSyncStart: ( /* nothing*/ ) => /* nothing*/ warnOnce( "TriggerSyncStart not yet implemented" ),
	TriggerSyncReady: ( /* nothing*/ ) => /* nothing */ warnOnce( "TriggerSyncReady not yet implemented" ),
	GetWidgetLife: whichWidget => /* real */ warnOnce( "GetWidgetLife not yet implemented" ),
	SetWidgetLife: ( /* widget*/ whichWidget, /* real*/ newLife ) => /* nothing */ warnOnce( "SetWidgetLife not yet implemented" ),
	GetWidgetX: whichWidget => /* real */ warnOnce( "GetWidgetX not yet implemented" ),
	GetWidgetY: whichWidget => /* real */ warnOnce( "GetWidgetY not yet implemented" ),
	CreateDestructable: ( /* integer*/ objectid, /* real*/ x, /* real*/ y, /* real*/ face, /* real*/ scale, /* integer*/ variation ) => /* destructable */ warnOnce( "CreateDestructable not yet implemented" ),
	CreateDestructableZ: ( /* integer*/ objectid, /* real*/ x, /* real*/ y, /* real*/ z, /* real*/ face, /* real*/ scale, /* integer*/ variation ) => /* destructable */ warnOnce( "CreateDestructableZ not yet implemented" ),
	CreateDeadDestructable: ( /* integer*/ objectid, /* real*/ x, /* real*/ y, /* real*/ face, /* real*/ scale, /* integer*/ variation ) => /* destructable */ warnOnce( "CreateDeadDestructable not yet implemented" ),
	CreateDeadDestructableZ: ( /* integer*/ objectid, /* real*/ x, /* real*/ y, /* real*/ z, /* real*/ face, /* real*/ scale, /* integer*/ variation ) => /* destructable */ warnOnce( "CreateDeadDestructableZ not yet implemented" ),
	RemoveDestructable: d => /* nothing */ warnOnce( "RemoveDestructable not yet implemented" ),
	KillDestructable: d => /* nothing */ warnOnce( "KillDestructable not yet implemented" ),
	SetDestructableInvulnerable: ( /* destructable*/ d, /* boolean*/ flag ) => /* nothing */ warnOnce( "SetDestructableInvulnerable not yet implemented" ),
	IsDestructableInvulnerable: d => /* boolean */ warnOnce( "IsDestructableInvulnerable not yet implemented" ),
	EnumDestructablesInRect: ( /* rect*/ r, /* boolexpr*/ filter, /* code*/ actionFunc ) => /* nothing */ warnOnce( "EnumDestructablesInRect not yet implemented" ),
	GetDestructableTypeId: d => /* integer */ warnOnce( "GetDestructableTypeId not yet implemented" ),
	GetDestructableX: d => /* real */ warnOnce( "GetDestructableX not yet implemented" ),
	GetDestructableY: d => /* real */ warnOnce( "GetDestructableY not yet implemented" ),
	SetDestructableLife: ( /* destructable*/ d, /* real*/ life ) => /* nothing */ warnOnce( "SetDestructableLife not yet implemented" ),
	GetDestructableLife: d => /* real */ warnOnce( "GetDestructableLife not yet implemented" ),
	SetDestructableMaxLife: ( /* destructable*/ d, /* real*/ max ) => /* nothing */ warnOnce( "SetDestructableMaxLife not yet implemented" ),
	GetDestructableMaxLife: d => /* real */ warnOnce( "GetDestructableMaxLife not yet implemented" ),
	DestructableRestoreLife: ( /* destructable*/ d, /* real*/ life, /* boolean*/ birth ) => /* nothing */ warnOnce( "DestructableRestoreLife not yet implemented" ),
	QueueDestructableAnimation: ( /* destructable*/ d, /* string*/ whichAnimation ) => /* nothing */ warnOnce( "QueueDestructableAnimation not yet implemented" ),
	SetDestructableAnimation: ( /* destructable*/ d, /* string*/ whichAnimation ) => /* nothing */ warnOnce( "SetDestructableAnimation not yet implemented" ),
	SetDestructableAnimationSpeed: ( /* destructable*/ d, /* real*/ speedFactor ) => /* nothing */ warnOnce( "SetDestructableAnimationSpeed not yet implemented" ),
	ShowDestructable: ( /* destructable*/ d, /* boolean*/ flag ) => /* nothing */ warnOnce( "ShowDestructable not yet implemented" ),
	GetDestructableOccluderHeight: d => /* real */ warnOnce( "GetDestructableOccluderHeight not yet implemented" ),
	SetDestructableOccluderHeight: ( /* destructable*/ d, /* real*/ height ) => /* nothing */ warnOnce( "SetDestructableOccluderHeight not yet implemented" ),
	GetDestructableName: d => /* string */ warnOnce( "GetDestructableName not yet implemented" ),
	CreateItem: ( /* integer*/ itemid, /* real*/ x, /* real*/ y ) => /* item */ warnOnce( "CreateItem not yet implemented" ),
	RemoveItem: whichItem => /* nothing */ warnOnce( "RemoveItem not yet implemented" ),
	GetItemPlayer: whichItem => /* player */ warnOnce( "GetItemPlayer not yet implemented" ),
	GetItemTypeId: i => /* integer */ warnOnce( "GetItemTypeId not yet implemented" ),
	GetItemX: i => /* real */ warnOnce( "GetItemX not yet implemented" ),
	GetItemY: i => /* real */ warnOnce( "GetItemY not yet implemented" ),
	SetItemPosition: ( /* item*/ i, /* real*/ x, /* real*/ y ) => /* nothing */ warnOnce( "SetItemPosition not yet implemented" ),
	SetItemDropOnDeath: ( /* item*/ whichItem, /* boolean*/ flag ) => /* nothing */ warnOnce( "SetItemDropOnDeath not yet implemented" ),
	SetItemDroppable: ( /* item*/ i, /* boolean*/ flag ) => /* nothing */ warnOnce( "SetItemDroppable not yet implemented" ),
	SetItemPawnable: ( /* item*/ i, /* boolean*/ flag ) => /* nothing */ warnOnce( "SetItemPawnable not yet implemented" ),
	SetItemPlayer: ( /* item*/ whichItem, /* player*/ whichPlayer, /* boolean*/ changeColor ) => /* nothing */ warnOnce( "SetItemPlayer not yet implemented" ),
	SetItemInvulnerable: ( /* item*/ whichItem, /* boolean*/ flag ) => /* nothing */ warnOnce( "SetItemInvulnerable not yet implemented" ),
	IsItemInvulnerable: whichItem => /* boolean */ warnOnce( "IsItemInvulnerable not yet implemented" ),
	SetItemVisible: ( /* item*/ whichItem, /* boolean*/ show ) => /* nothing */ warnOnce( "SetItemVisible not yet implemented" ),
	IsItemVisible: whichItem => /* boolean */ warnOnce( "IsItemVisible not yet implemented" ),
	IsItemOwned: whichItem => /* boolean */ warnOnce( "IsItemOwned not yet implemented" ),
	IsItemPowerup: whichItem => /* boolean */ warnOnce( "IsItemPowerup not yet implemented" ),
	IsItemSellable: whichItem => /* boolean */ warnOnce( "IsItemSellable not yet implemented" ),
	IsItemPawnable: whichItem => /* boolean */ warnOnce( "IsItemPawnable not yet implemented" ),
	IsItemIdPowerup: itemId => /* boolean */ warnOnce( "IsItemIdPowerup not yet implemented" ),
	IsItemIdSellable: itemId => /* boolean */ warnOnce( "IsItemIdSellable not yet implemented" ),
	IsItemIdPawnable: itemId => /* boolean */ warnOnce( "IsItemIdPawnable not yet implemented" ),
	EnumItemsInRect: ( /* rect*/ r, /* boolexpr*/ filter, /* code*/ actionFunc ) => /* nothing */ warnOnce( "EnumItemsInRect not yet implemented" ),
	GetItemLevel: whichItem => /* integer */ warnOnce( "GetItemLevel not yet implemented" ),
	GetItemType: whichItem => /* itemtype */ warnOnce( "GetItemType not yet implemented" ),
	SetItemDropID: ( /* item*/ whichItem, /* integer*/ unitId ) => /* nothing */ warnOnce( "SetItemDropID not yet implemented" ),
	GetItemCharges: whichItem => /* integer */ warnOnce( "GetItemCharges not yet implemented" ),
	SetItemCharges: ( /* item*/ whichItem, /* integer*/ charges ) => /* nothing */ warnOnce( "SetItemCharges not yet implemented" ),
	GetItemUserData: whichItem => /* integer */ warnOnce( "GetItemUserData not yet implemented" ),
	SetItemUserData: ( /* item*/ whichItem, /* integer*/ data ) => /* nothing */ warnOnce( "SetItemUserData not yet implemented" ),
	CreateUnitByName: ( /* player*/ whichPlayer, /* string*/ unitname, /* real*/ x, /* real*/ y, /* real*/ face ) => /* unit */ warnOnce( "CreateUnitByName not yet implemented" ),
	CreateUnitAtLoc: ( /* player*/ id, /* integer*/ unitid, /* location*/ whichLocation, /* real*/ face ) => /* unit */ warnOnce( "CreateUnitAtLoc not yet implemented" ),
	CreateUnitAtLocByName: ( /* player*/ id, /* string*/ unitname, /* location*/ whichLocation, /* real*/ face ) => /* unit */ warnOnce( "CreateUnitAtLocByName not yet implemented" ),
	CreateCorpse: ( /* player*/ whichPlayer, /* integer*/ unitid, /* real*/ x, /* real*/ y, /* real*/ face ) => /* unit */ warnOnce( "CreateCorpse not yet implemented" ),
	KillUnit: whichUnit => /* nothing */ warnOnce( "KillUnit not yet implemented" ),
	RemoveUnit: whichUnit => /* nothing */ warnOnce( "RemoveUnit not yet implemented" ),
	ShowUnit: ( /* unit*/ whichUnit, /* boolean*/ show ) => /* nothing */ warnOnce( "ShowUnit not yet implemented" ),
	SetUnitState: ( /* unit*/ whichUnit, /* unitstate*/ whichUnitState, /* real*/ newVal ) => /* nothing */ warnOnce( "SetUnitState not yet implemented" ),
	SetUnitX: ( /* unit*/ whichUnit, /* real*/ newX ) => /* nothing */ warnOnce( "SetUnitX not yet implemented" ),
	SetUnitY: ( /* unit*/ whichUnit, /* real*/ newY ) => /* nothing */ warnOnce( "SetUnitY not yet implemented" ),
	SetUnitPosition: ( /* unit*/ whichUnit, /* real*/ newX, /* real*/ newY ) => /* nothing */ warnOnce( "SetUnitPosition not yet implemented" ),
	SetUnitPositionLoc: ( /* unit*/ whichUnit, /* location*/ whichLocation ) => /* nothing */ warnOnce( "SetUnitPositionLoc not yet implemented" ),
	SetUnitFacing: ( /* unit*/ whichUnit, /* real*/ facingAngle ) => /* nothing */ warnOnce( "SetUnitFacing not yet implemented" ),
	SetUnitFacingTimed: ( /* unit*/ whichUnit, /* real*/ facingAngle, /* real*/ duration ) => /* nothing */ warnOnce( "SetUnitFacingTimed not yet implemented" ),
	SetUnitMoveSpeed: ( /* unit*/ whichUnit, /* real*/ newSpeed ) => /* nothing */ warnOnce( "SetUnitMoveSpeed not yet implemented" ),
	SetUnitFlyHeight: ( /* unit*/ whichUnit, /* real*/ newHeight, /* real*/ rate ) => /* nothing */ warnOnce( "SetUnitFlyHeight not yet implemented" ),
	SetUnitTurnSpeed: ( /* unit*/ whichUnit, /* real*/ newTurnSpeed ) => /* nothing */ warnOnce( "SetUnitTurnSpeed not yet implemented" ),
	SetUnitPropWindow: ( /* unit*/ whichUnit, /* real*/ newPropWindowAngle ) => /* nothing */ warnOnce( "SetUnitPropWindow not yet implemented" ),
	SetUnitAcquireRange: ( /* unit*/ whichUnit, /* real*/ newAcquireRange ) => /* nothing */ warnOnce( "SetUnitAcquireRange not yet implemented" ),
	SetUnitCreepGuard: ( /* unit*/ whichUnit, /* boolean*/ creepGuard ) => /* nothing */ warnOnce( "SetUnitCreepGuard not yet implemented" ),
	GetUnitAcquireRange: whichUnit => /* real */ warnOnce( "GetUnitAcquireRange not yet implemented" ),
	GetUnitTurnSpeed: whichUnit => /* real */ warnOnce( "GetUnitTurnSpeed not yet implemented" ),
	GetUnitPropWindow: whichUnit => /* real */ warnOnce( "GetUnitPropWindow not yet implemented" ),
	GetUnitFlyHeight: whichUnit => /* real */ warnOnce( "GetUnitFlyHeight not yet implemented" ),
	GetUnitDefaultAcquireRange: whichUnit => /* real */ warnOnce( "GetUnitDefaultAcquireRange not yet implemented" ),
	GetUnitDefaultTurnSpeed: whichUnit => /* real */ warnOnce( "GetUnitDefaultTurnSpeed not yet implemented" ),
	GetUnitDefaultPropWindow: whichUnit => /* real */ warnOnce( "GetUnitDefaultPropWindow not yet implemented" ),
	GetUnitDefaultFlyHeight: whichUnit => /* real */ warnOnce( "GetUnitDefaultFlyHeight not yet implemented" ),
	SetUnitOwner: ( /* unit*/ whichUnit, /* player*/ whichPlayer, /* boolean*/ changeColor ) => /* nothing */ warnOnce( "SetUnitOwner not yet implemented" ),
	SetUnitColor: ( /* unit*/ whichUnit, /* playercolor*/ whichColor ) => /* nothing */ warnOnce( "SetUnitColor not yet implemented" ),
	SetUnitScale: ( /* unit*/ whichUnit, /* real*/ scaleX, /* real*/ scaleY, /* real*/ scaleZ ) => /* nothing */ warnOnce( "SetUnitScale not yet implemented" ),
	SetUnitTimeScale: ( /* unit*/ whichUnit, /* real*/ timeScale ) => /* nothing */ warnOnce( "SetUnitTimeScale not yet implemented" ),
	SetUnitBlendTime: ( /* unit*/ whichUnit, /* real*/ blendTime ) => /* nothing */ warnOnce( "SetUnitBlendTime not yet implemented" ),
	SetUnitVertexColor: ( /* unit*/ whichUnit, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing */ warnOnce( "SetUnitVertexColor not yet implemented" ),
	QueueUnitAnimation: ( /* unit*/ whichUnit, /* string*/ whichAnimation ) => /* nothing */ warnOnce( "QueueUnitAnimation not yet implemented" ),
	SetUnitAnimation: ( /* unit*/ whichUnit, /* string*/ whichAnimation ) => /* nothing */ warnOnce( "SetUnitAnimation not yet implemented" ),
	SetUnitAnimationByIndex: ( /* unit*/ whichUnit, /* integer*/ whichAnimation ) => /* nothing */ warnOnce( "SetUnitAnimationByIndex not yet implemented" ),
	SetUnitAnimationWithRarity: ( /* unit*/ whichUnit, /* string*/ whichAnimation, /* raritycontrol*/ rarity ) => /* nothing */ warnOnce( "SetUnitAnimationWithRarity not yet implemented" ),
	AddUnitAnimationProperties: ( /* unit*/ whichUnit, /* string*/ animProperties, /* boolean*/ add ) => /* nothing */ warnOnce( "AddUnitAnimationProperties not yet implemented" ),
	SetUnitLookAt: ( /* unit*/ whichUnit, /* string*/ whichBone, /* unit*/ lookAtTarget, /* real*/ offsetX, /* real*/ offsetY, /* real*/ offsetZ ) => /* nothing */ warnOnce( "SetUnitLookAt not yet implemented" ),
	ResetUnitLookAt: whichUnit => /* nothing */ warnOnce( "ResetUnitLookAt not yet implemented" ),
	SetUnitRescuable: ( /* unit*/ whichUnit, /* player*/ byWhichPlayer, /* boolean*/ flag ) => /* nothing */ warnOnce( "SetUnitRescuable not yet implemented" ),
	SetUnitRescueRange: ( /* unit*/ whichUnit, /* real*/ range ) => /* nothing */ warnOnce( "SetUnitRescueRange not yet implemented" ),
	SetHeroStr: ( /* unit*/ whichHero, /* integer*/ newStr, /* boolean*/ permanent ) => /* nothing */ warnOnce( "SetHeroStr not yet implemented" ),
	SetHeroAgi: ( /* unit*/ whichHero, /* integer*/ newAgi, /* boolean*/ permanent ) => /* nothing */ warnOnce( "SetHeroAgi not yet implemented" ),
	SetHeroInt: ( /* unit*/ whichHero, /* integer*/ newInt, /* boolean*/ permanent ) => /* nothing */ warnOnce( "SetHeroInt not yet implemented" ),
	GetHeroStr: ( /* unit*/ whichHero, /* boolean*/ includeBonuses ) => /* integer */ warnOnce( "GetHeroStr not yet implemented" ),
	GetHeroAgi: ( /* unit*/ whichHero, /* boolean*/ includeBonuses ) => /* integer */ warnOnce( "GetHeroAgi not yet implemented" ),
	GetHeroInt: ( /* unit*/ whichHero, /* boolean*/ includeBonuses ) => /* integer */ warnOnce( "GetHeroInt not yet implemented" ),
	UnitStripHeroLevel: ( /* unit*/ whichHero, /* integer*/ howManyLevels ) => /* boolean */ warnOnce( "UnitStripHeroLevel not yet implemented" ),
	GetHeroXP: whichHero => /* integer */ warnOnce( "GetHeroXP not yet implemented" ),
	SetHeroXP: ( /* unit*/ whichHero, /* integer*/ newXpVal, /* boolean*/ showEyeCandy ) => /* nothing */ warnOnce( "SetHeroXP not yet implemented" ),
	GetHeroSkillPoints: whichHero => /* integer */ warnOnce( "GetHeroSkillPoints not yet implemented" ),
	UnitModifySkillPoints: ( /* unit*/ whichHero, /* integer*/ skillPointDelta ) => /* boolean */ warnOnce( "UnitModifySkillPoints not yet implemented" ),
	AddHeroXP: ( /* unit*/ whichHero, /* integer*/ xpToAdd, /* boolean*/ showEyeCandy ) => /* nothing */ warnOnce( "AddHeroXP not yet implemented" ),
	SetHeroLevel: ( /* unit*/ whichHero, /* integer*/ level, /* boolean*/ showEyeCandy ) => /* nothing */ warnOnce( "SetHeroLevel not yet implemented" ),
	GetHeroProperName: whichHero => /* string */ warnOnce( "GetHeroProperName not yet implemented" ),
	SuspendHeroXP: ( /* unit*/ whichHero, /* boolean*/ flag ) => /* nothing */ warnOnce( "SuspendHeroXP not yet implemented" ),
	IsSuspendedXP: whichHero => /* boolean */ warnOnce( "IsSuspendedXP not yet implemented" ),
	SelectHeroSkill: ( /* unit*/ whichHero, /* integer*/ abilcode ) => /* nothing */ warnOnce( "SelectHeroSkill not yet implemented" ),
	GetUnitAbilityLevel: ( /* unit*/ whichUnit, /* integer*/ abilcode ) => /* integer */ warnOnce( "GetUnitAbilityLevel not yet implemented" ),
	DecUnitAbilityLevel: ( /* unit*/ whichUnit, /* integer*/ abilcode ) => /* integer */ warnOnce( "DecUnitAbilityLevel not yet implemented" ),
	IncUnitAbilityLevel: ( /* unit*/ whichUnit, /* integer*/ abilcode ) => /* integer */ warnOnce( "IncUnitAbilityLevel not yet implemented" ),
	SetUnitAbilityLevel: ( /* unit*/ whichUnit, /* integer*/ abilcode, /* integer*/ level ) => /* integer */ warnOnce( "SetUnitAbilityLevel not yet implemented" ),
	ReviveHero: ( /* unit*/ whichHero, /* real*/ x, /* real*/ y, /* boolean*/ doEyecandy ) => /* boolean */ warnOnce( "ReviveHero not yet implemented" ),
	ReviveHeroLoc: ( /* unit*/ whichHero, /* location*/ loc, /* boolean*/ doEyecandy ) => /* boolean */ warnOnce( "ReviveHeroLoc not yet implemented" ),
	SetUnitExploded: ( /* unit*/ whichUnit, /* boolean*/ exploded ) => /* nothing */ warnOnce( "SetUnitExploded not yet implemented" ),
	SetUnitInvulnerable: ( /* unit*/ whichUnit, /* boolean*/ flag ) => /* nothing */ warnOnce( "SetUnitInvulnerable not yet implemented" ),
	PauseUnit: ( /* unit*/ whichUnit, /* boolean*/ flag ) => /* nothing */ warnOnce( "PauseUnit not yet implemented" ),
	IsUnitPaused: whichHero => /* boolean */ warnOnce( "IsUnitPaused not yet implemented" ),
	SetUnitPathing: ( /* unit*/ whichUnit, /* boolean*/ flag ) => /* nothing */ warnOnce( "SetUnitPathing not yet implemented" ),
	ClearSelection: ( /* nothing*/ ) => /* nothing */ warnOnce( "ClearSelection not yet implemented" ),
	SelectUnit: ( /* unit*/ whichUnit, /* boolean*/ flag ) => /* nothing */ warnOnce( "SelectUnit not yet implemented" ),
	GetUnitPointValue: whichUnit => /* integer */ warnOnce( "GetUnitPointValue not yet implemented" ),
	GetUnitPointValueByType: unitType => /* integer */ warnOnce( "GetUnitPointValueByType not yet implemented" ),
	UnitAddItem: ( /* unit*/ whichUnit, /* item*/ whichItem ) => /* boolean */ warnOnce( "UnitAddItem not yet implemented" ),
	UnitAddItemById: ( /* unit*/ whichUnit, /* integer*/ itemId ) => /* item */ warnOnce( "UnitAddItemById not yet implemented" ),
	UnitAddItemToSlotById: ( /* unit*/ whichUnit, /* integer*/ itemId, /* integer*/ itemSlot ) => /* boolean */ warnOnce( "UnitAddItemToSlotById not yet implemented" ),
	UnitRemoveItem: ( /* unit*/ whichUnit, /* item*/ whichItem ) => /* nothing */ warnOnce( "UnitRemoveItem not yet implemented" ),
	UnitRemoveItemFromSlot: ( /* unit*/ whichUnit, /* integer*/ itemSlot ) => /* item */ warnOnce( "UnitRemoveItemFromSlot not yet implemented" ),
	UnitHasItem: ( /* unit*/ whichUnit, /* item*/ whichItem ) => /* boolean */ warnOnce( "UnitHasItem not yet implemented" ),
	UnitItemInSlot: ( /* unit*/ whichUnit, /* integer*/ itemSlot ) => /* item */ warnOnce( "UnitItemInSlot not yet implemented" ),
	UnitInventorySize: whichUnit => /* integer */ warnOnce( "UnitInventorySize not yet implemented" ),
	UnitDropItemPoint: ( /* unit*/ whichUnit, /* item*/ whichItem, /* real*/ x, /* real*/ y ) => /* boolean */ warnOnce( "UnitDropItemPoint not yet implemented" ),
	UnitDropItemSlot: ( /* unit*/ whichUnit, /* item*/ whichItem, /* integer*/ slot ) => /* boolean */ warnOnce( "UnitDropItemSlot not yet implemented" ),
	UnitDropItemTarget: ( /* unit*/ whichUnit, /* item*/ whichItem, /* widget*/ target ) => /* boolean */ warnOnce( "UnitDropItemTarget not yet implemented" ),
	UnitUseItem: ( /* unit*/ whichUnit, /* item*/ whichItem ) => /* boolean */ warnOnce( "UnitUseItem not yet implemented" ),
	UnitUseItemPoint: ( /* unit*/ whichUnit, /* item*/ whichItem, /* real*/ x, /* real*/ y ) => /* boolean */ warnOnce( "UnitUseItemPoint not yet implemented" ),
	UnitUseItemTarget: ( /* unit*/ whichUnit, /* item*/ whichItem, /* widget*/ target ) => /* boolean */ warnOnce( "UnitUseItemTarget not yet implemented" ),
	SetUnitUseFood: ( /* unit*/ whichUnit, /* boolean*/ useFood ) => /* nothing*/ warnOnce( "SetUnitUseFood not yet implemented" ),
	UnitShareVision: ( /* unit*/ whichUnit, /* player*/ whichPlayer, /* boolean*/ share ) => /* nothing*/ warnOnce( "UnitShareVision not yet implemented" ),
	UnitSuspendDecay: ( /* unit*/ whichUnit, /* boolean*/ suspend ) => /* nothing*/ warnOnce( "UnitSuspendDecay not yet implemented" ),
	UnitAddType: ( /* unit*/ whichUnit, /* unittype*/ whichUnitType ) => /* boolean*/ warnOnce( "UnitAddType not yet implemented" ),
	UnitRemoveType: ( /* unit*/ whichUnit, /* unittype*/ whichUnitType ) => /* boolean*/ warnOnce( "UnitRemoveType not yet implemented" ),
	UnitAddAbility: ( /* unit*/ whichUnit, /* integer*/ abilityId ) => /* boolean*/ warnOnce( "UnitAddAbility not yet implemented" ),
	UnitRemoveAbility: ( /* unit*/ whichUnit, /* integer*/ abilityId ) => /* boolean*/ warnOnce( "UnitRemoveAbility not yet implemented" ),
	UnitMakeAbilityPermanent: ( /* unit*/ whichUnit, /* boolean*/ permanent, /* integer*/ abilityId ) => /* boolean*/ warnOnce( "UnitMakeAbilityPermanent not yet implemented" ),
	UnitRemoveBuffs: ( /* unit*/ whichUnit, /* boolean*/ removePositive, /* boolean*/ removeNegative ) => /* nothing*/ warnOnce( "UnitRemoveBuffs not yet implemented" ),
	UnitRemoveBuffsEx: ( /* unit*/ whichUnit, /* boolean*/ removePositive, /* boolean*/ removeNegative, /* boolean*/ magic, /* boolean*/ physical, /* boolean*/ timedLife, /* boolean*/ aura, /* boolean*/ autoDispel ) => /* nothing*/ warnOnce( "UnitRemoveBuffsEx not yet implemented" ),
	UnitHasBuffsEx: ( /* unit*/ whichUnit, /* boolean*/ removePositive, /* boolean*/ removeNegative, /* boolean*/ magic, /* boolean*/ physical, /* boolean*/ timedLife, /* boolean*/ aura, /* boolean*/ autoDispel ) => /* boolean*/ warnOnce( "UnitHasBuffsEx not yet implemented" ),
	UnitCountBuffsEx: ( /* unit*/ whichUnit, /* boolean*/ removePositive, /* boolean*/ removeNegative, /* boolean*/ magic, /* boolean*/ physical, /* boolean*/ timedLife, /* boolean*/ aura, /* boolean*/ autoDispel ) => /* integer*/ warnOnce( "UnitCountBuffsEx not yet implemented" ),
	UnitAddSleep: ( /* unit*/ whichUnit, /* boolean*/ add ) => /* nothing*/ warnOnce( "UnitAddSleep not yet implemented" ),
	UnitCanSleep: whichUnit => /* boolean*/ warnOnce( "UnitCanSleep not yet implemented" ),
	UnitAddSleepPerm: ( /* unit*/ whichUnit, /* boolean*/ add ) => /* nothing*/ warnOnce( "UnitAddSleepPerm not yet implemented" ),
	UnitCanSleepPerm: whichUnit => /* boolean*/ warnOnce( "UnitCanSleepPerm not yet implemented" ),
	UnitIsSleeping: whichUnit => /* boolean*/ warnOnce( "UnitIsSleeping not yet implemented" ),
	UnitWakeUp: whichUnit => /* nothing*/ warnOnce( "UnitWakeUp not yet implemented" ),
	UnitApplyTimedLife: ( /* unit*/ whichUnit, /* integer*/ buffId, /* real*/ duration ) => /* nothing*/ warnOnce( "UnitApplyTimedLife not yet implemented" ),
	UnitIgnoreAlarm: ( /* unit*/ whichUnit, /* boolean*/ flag ) => /* boolean*/ warnOnce( "UnitIgnoreAlarm not yet implemented" ),
	UnitIgnoreAlarmToggled: whichUnit => /* boolean*/ warnOnce( "UnitIgnoreAlarmToggled not yet implemented" ),
	UnitResetCooldown: whichUnit => /* nothing*/ warnOnce( "UnitResetCooldown not yet implemented" ),
	UnitSetConstructionProgress: ( /* unit*/ whichUnit, /* integer*/ constructionPercentage ) => /* nothing*/ warnOnce( "UnitSetConstructionProgress not yet implemented" ),
	UnitSetUpgradeProgress: ( /* unit*/ whichUnit, /* integer*/ upgradePercentage ) => /* nothing*/ warnOnce( "UnitSetUpgradeProgress not yet implemented" ),
	UnitPauseTimedLife: ( /* unit*/ whichUnit, /* boolean*/ flag ) => /* nothing*/ warnOnce( "UnitPauseTimedLife not yet implemented" ),
	UnitSetUsesAltIcon: ( /* unit*/ whichUnit, /* boolean*/ flag ) => /* nothing*/ warnOnce( "UnitSetUsesAltIcon not yet implemented" ),
	UnitDamagePoint: ( /* unit*/ whichUnit, /* real*/ delay, /* real*/ radius, /* real*/ x, /* real*/ y, /* real*/ amount, /* boolean*/ attack, /* boolean*/ ranged, /* attacktype*/ attackType, /* damagetype*/ damageType, /* weapontype*/ weaponType ) => /* boolean*/ warnOnce( "UnitDamagePoint not yet implemented" ),
	UnitDamageTarget: ( /* unit*/ whichUnit, /* widget*/ target, /* real*/ amount, /* boolean*/ attack, /* boolean*/ ranged, /* attacktype*/ attackType, /* damagetype*/ damageType, /* weapontype*/ weaponType ) => /* boolean*/ warnOnce( "UnitDamageTarget not yet implemented" ),
	IssueImmediateOrder: ( /* unit*/ whichUnit, /* string*/ order ) => /* boolean*/ warnOnce( "IssueImmediateOrder not yet implemented" ),
	IssueImmediateOrderById: ( /* unit*/ whichUnit, /* integer*/ order ) => /* boolean*/ warnOnce( "IssueImmediateOrderById not yet implemented" ),
	IssuePointOrder: ( /* unit*/ whichUnit, /* string*/ order, /* real*/ x, /* real*/ y ) => /* boolean*/ warnOnce( "IssuePointOrder not yet implemented" ),
	IssuePointOrderLoc: ( /* unit*/ whichUnit, /* string*/ order, /* location*/ whichLocation ) => /* boolean*/ warnOnce( "IssuePointOrderLoc not yet implemented" ),
	IssuePointOrderById: ( /* unit*/ whichUnit, /* integer*/ order, /* real*/ x, /* real*/ y ) => /* boolean*/ warnOnce( "IssuePointOrderById not yet implemented" ),
	IssuePointOrderByIdLoc: ( /* unit*/ whichUnit, /* integer*/ order, /* location*/ whichLocation ) => /* boolean*/ warnOnce( "IssuePointOrderByIdLoc not yet implemented" ),
	IssueTargetOrder: ( /* unit*/ whichUnit, /* string*/ order, /* widget*/ targetWidget ) => /* boolean*/ warnOnce( "IssueTargetOrder not yet implemented" ),
	IssueTargetOrderById: ( /* unit*/ whichUnit, /* integer*/ order, /* widget*/ targetWidget ) => /* boolean*/ warnOnce( "IssueTargetOrderById not yet implemented" ),
	IssueInstantPointOrder: ( /* unit*/ whichUnit, /* string*/ order, /* real*/ x, /* real*/ y, /* widget*/ instantTargetWidget ) => /* boolean*/ warnOnce( "IssueInstantPointOrder not yet implemented" ),
	IssueInstantPointOrderById: ( /* unit*/ whichUnit, /* integer*/ order, /* real*/ x, /* real*/ y, /* widget*/ instantTargetWidget ) => /* boolean*/ warnOnce( "IssueInstantPointOrderById not yet implemented" ),
	IssueInstantTargetOrder: ( /* unit*/ whichUnit, /* string*/ order, /* widget*/ targetWidget, /* widget*/ instantTargetWidget ) => /* boolean*/ warnOnce( "IssueInstantTargetOrder not yet implemented" ),
	IssueInstantTargetOrderById: ( /* unit*/ whichUnit, /* integer*/ order, /* widget*/ targetWidget, /* widget*/ instantTargetWidget ) => /* boolean*/ warnOnce( "IssueInstantTargetOrderById not yet implemented" ),
	IssueBuildOrder: ( /* unit*/ whichPeon, /* string*/ unitToBuild, /* real*/ x, /* real*/ y ) => /* boolean*/ warnOnce( "IssueBuildOrder not yet implemented" ),
	IssueBuildOrderById: ( /* unit*/ whichPeon, /* integer*/ unitId, /* real*/ x, /* real*/ y ) => /* boolean*/ warnOnce( "IssueBuildOrderById not yet implemented" ),
	IssueNeutralImmediateOrder: ( /* player*/ forWhichPlayer, /* unit*/ neutralStructure, /* string*/ unitToBuild ) => /* boolean*/ warnOnce( "IssueNeutralImmediateOrder not yet implemented" ),
	IssueNeutralImmediateOrderById: ( /* player*/ forWhichPlayer, /* unit*/ neutralStructure, /* integer*/ unitId ) => /* boolean*/ warnOnce( "IssueNeutralImmediateOrderById not yet implemented" ),
	IssueNeutralPointOrder: ( /* player*/ forWhichPlayer, /* unit*/ neutralStructure, /* string*/ unitToBuild, /* real*/ x, /* real*/ y ) => /* boolean*/ warnOnce( "IssueNeutralPointOrder not yet implemented" ),
	IssueNeutralPointOrderById: ( /* player*/ forWhichPlayer, /* unit*/ neutralStructure, /* integer*/ unitId, /* real*/ x, /* real*/ y ) => /* boolean*/ warnOnce( "IssueNeutralPointOrderById not yet implemented" ),
	IssueNeutralTargetOrder: ( /* player*/ forWhichPlayer, /* unit*/ neutralStructure, /* string*/ unitToBuild, /* widget*/ target ) => /* boolean*/ warnOnce( "IssueNeutralTargetOrder not yet implemented" ),
	IssueNeutralTargetOrderById: ( /* player*/ forWhichPlayer, /* unit*/ neutralStructure, /* integer*/ unitId, /* widget*/ target ) => /* boolean*/ warnOnce( "IssueNeutralTargetOrderById not yet implemented" ),
	GetUnitCurrentOrder: whichUnit => /* integer*/ warnOnce( "GetUnitCurrentOrder not yet implemented" ),
	SetResourceAmount: ( /* unit*/ whichUnit, /* integer*/ amount ) => /* nothing*/ warnOnce( "SetResourceAmount not yet implemented" ),
	AddResourceAmount: ( /* unit*/ whichUnit, /* integer*/ amount ) => /* nothing*/ warnOnce( "AddResourceAmount not yet implemented" ),
	GetResourceAmount: whichUnit => /* integer*/ warnOnce( "GetResourceAmount not yet implemented" ),
	WaygateGetDestinationX: waygate => /* real*/ warnOnce( "WaygateGetDestinationX not yet implemented" ),
	WaygateGetDestinationY: waygate => /* real*/ warnOnce( "WaygateGetDestinationY not yet implemented" ),
	WaygateSetDestination: ( /* unit*/ waygate, /* real*/ x, /* real*/ y ) => /* nothing*/ warnOnce( "WaygateSetDestination not yet implemented" ),
	WaygateActivate: ( /* unit*/ waygate, /* boolean*/ activate ) => /* nothing*/ warnOnce( "WaygateActivate not yet implemented" ),
	WaygateIsActive: waygate => /* boolean*/ warnOnce( "WaygateIsActive not yet implemented" ),
	AddItemToAllStock: ( /* integer*/ itemId, /* integer*/ currentStock, /* integer*/ stockMax ) => /* nothing*/ warnOnce( "AddItemToAllStock not yet implemented" ),
	AddItemToStock: ( /* unit*/ whichUnit, /* integer*/ itemId, /* integer*/ currentStock, /* integer*/ stockMax ) => /* nothing*/ warnOnce( "AddItemToStock not yet implemented" ),
	AddUnitToAllStock: ( /* integer*/ unitId, /* integer*/ currentStock, /* integer*/ stockMax ) => /* nothing*/ warnOnce( "AddUnitToAllStock not yet implemented" ),
	AddUnitToStock: ( /* unit*/ whichUnit, /* integer*/ unitId, /* integer*/ currentStock, /* integer*/ stockMax ) => /* nothing*/ warnOnce( "AddUnitToStock not yet implemented" ),
	RemoveItemFromAllStock: itemId => /* nothing*/ warnOnce( "RemoveItemFromAllStock not yet implemented" ),
	RemoveItemFromStock: ( /* unit*/ whichUnit, /* integer*/ itemId ) => /* nothing*/ warnOnce( "RemoveItemFromStock not yet implemented" ),
	RemoveUnitFromAllStock: unitId => /* nothing*/ warnOnce( "RemoveUnitFromAllStock not yet implemented" ),
	RemoveUnitFromStock: ( /* unit*/ whichUnit, /* integer*/ unitId ) => /* nothing*/ warnOnce( "RemoveUnitFromStock not yet implemented" ),
	SetAllItemTypeSlots: slots => /* nothing*/ warnOnce( "SetAllItemTypeSlots not yet implemented" ),
	SetAllUnitTypeSlots: slots => /* nothing*/ warnOnce( "SetAllUnitTypeSlots not yet implemented" ),
	SetItemTypeSlots: ( /* unit*/ whichUnit, /* integer*/ slots ) => /* nothing*/ warnOnce( "SetItemTypeSlots not yet implemented" ),
	SetUnitTypeSlots: ( /* unit*/ whichUnit, /* integer*/ slots ) => /* nothing*/ warnOnce( "SetUnitTypeSlots not yet implemented" ),
	GetUnitUserData: whichUnit => /* integer*/ warnOnce( "GetUnitUserData not yet implemented" ),
	SetUnitUserData: ( /* unit*/ whichUnit, /* integer*/ data ) => /* nothing*/ warnOnce( "SetUnitUserData not yet implemented" ),
	SetPlayerUnitsOwner: ( /* player*/ whichPlayer, /* integer*/ newOwner ) => /* nothing*/ warnOnce( "SetPlayerUnitsOwner not yet implemented" ),
	CripplePlayer: ( /* player*/ whichPlayer, /* force*/ toWhichPlayers, /* boolean*/ flag ) => /* nothing*/ warnOnce( "CripplePlayer not yet implemented" ),
	SetPlayerAbilityAvailable: ( /* player*/ whichPlayer, /* integer*/ abilid, /* boolean*/ avail ) => /* nothing*/ warnOnce( "SetPlayerAbilityAvailable not yet implemented" ),
	SetPlayerState: ( /* player*/ whichPlayer, /* playerstate*/ whichPlayerState, /* integer*/ value ) => /* nothing*/ warnOnce( "SetPlayerState not yet implemented" ),
	RemovePlayer: ( /* player*/ whichPlayer, /* playergameresult*/ gameResult ) => /* nothing*/ warnOnce( "RemovePlayer not yet implemented" ),
	CachePlayerHeroData: whichPlayer => /* nothing */ warnOnce( "CachePlayerHeroData not yet implemented" ),
	SetFogStateRect: ( /* player*/ forWhichPlayer, /* fogstate*/ whichState, /* rect*/ where, /* boolean*/ useSharedVision ) => /* nothing */ warnOnce( "SetFogStateRect not yet implemented" ),
	SetFogStateRadius: ( /* player*/ forWhichPlayer, /* fogstate*/ whichState, /* real*/ centerx, /* real*/ centerY, /* real*/ radius, /* boolean*/ useSharedVision ) => /* nothing */ warnOnce( "SetFogStateRadius not yet implemented" ),
	SetFogStateRadiusLoc: ( /* player*/ forWhichPlayer, /* fogstate*/ whichState, /* location*/ center, /* real*/ radius, /* boolean*/ useSharedVision ) => /* nothing */ warnOnce( "SetFogStateRadiusLoc not yet implemented" ),
	FogMaskEnable: enable => /* nothing */ warnOnce( "FogMaskEnable not yet implemented" ),
	IsFogMaskEnabled: ( /* nothing*/ ) => /* boolean */ warnOnce( "IsFogMaskEnabled not yet implemented" ),
	FogEnable: enable => /* nothing */ warnOnce( "FogEnable not yet implemented" ),
	IsFogEnabled: ( /* nothing*/ ) => /* boolean*/ warnOnce( "IsFogEnabled not yet implemented" ),
	CreateFogModifierRect: ( /* player*/ forWhichPlayer, /* fogstate*/ whichState, /* rect*/ where, /* boolean*/ useSharedVision, /* boolean*/ afterUnits ) => /* fogmodifier*/ warnOnce( "CreateFogModifierRect not yet implemented" ),
	CreateFogModifierRadius: ( /* player*/ forWhichPlayer, /* fogstate*/ whichState, /* real*/ centerx, /* real*/ centerY, /* real*/ radius, /* boolean*/ useSharedVision, /* boolean*/ afterUnits ) => /* fogmodifier*/ warnOnce( "CreateFogModifierRadius not yet implemented" ),
	CreateFogModifierRadiusLoc: ( /* player*/ forWhichPlayer, /* fogstate*/ whichState, /* location*/ center, /* real*/ radius, /* boolean*/ useSharedVision, /* boolean*/ afterUnits ) => /* fogmodifier*/ warnOnce( "CreateFogModifierRadiusLoc not yet implemented" ),
	DestroyFogModifier: whichFogModifier => /* nothing*/ warnOnce( "DestroyFogModifier not yet implemented" ),
	FogModifierStart: whichFogModifier => /* nothing*/ warnOnce( "FogModifierStart not yet implemented" ),
	FogModifierStop: whichFogModifier => /* nothing*/ warnOnce( "FogModifierStop not yet implemented" ),
	VersionGet: ( /* nothing*/ ) => /* version*/ warnOnce( "VersionGet not yet implemented" ),
	VersionCompatible: whichVersion => /* boolean*/ warnOnce( "VersionCompatible not yet implemented" ),
	VersionSupported: whichVersion => /* boolean*/ warnOnce( "VersionSupported not yet implemented" ),
	EndGame: doScoreScreen => /* nothing */ warnOnce( "EndGame not yet implemented" ),
	ChangeLevel: ( /* string*/ newLevel, /* boolean*/ doScoreScreen ) => /* nothing */ warnOnce( "ChangeLevel not yet implemented" ),
	RestartGame: doScoreScreen => /* nothing */ warnOnce( "RestartGame not yet implemented" ),
	ReloadGame: ( /* nothing*/ ) => /* nothing */ warnOnce( "ReloadGame not yet implemented" ),
	SetCampaignMenuRace: r => /* nothing */ warnOnce( "SetCampaignMenuRace not yet implemented" ),
	SetCampaignMenuRaceEx: campaignIndex => /* nothing */ warnOnce( "SetCampaignMenuRaceEx not yet implemented" ),
	ForceCampaignSelectScreen: ( /* nothing*/ ) => /* nothing */ warnOnce( "ForceCampaignSelectScreen not yet implemented" ),
	LoadGame: ( /* string*/ saveFileName, /* boolean*/ doScoreScreen ) => /* nothing */ warnOnce( "LoadGame not yet implemented" ),
	SaveGame: saveFileName => /* nothing */ warnOnce( "SaveGame not yet implemented" ),
	RenameSaveDirectory: ( /* string*/ sourceDirName, /* string*/ destDirName ) => /* boolean */ warnOnce( "RenameSaveDirectory not yet implemented" ),
	RemoveSaveDirectory: sourceDirName => /* boolean */ warnOnce( "RemoveSaveDirectory not yet implemented" ),
	CopySaveGame: ( /* string*/ sourceSaveName, /* string*/ destSaveName ) => /* boolean */ warnOnce( "CopySaveGame not yet implemented" ),
	SaveGameExists: saveName => /* boolean */ warnOnce( "SaveGameExists not yet implemented" ),
	SyncSelections: ( /* nothing*/ ) => /* nothing */ warnOnce( "SyncSelections not yet implemented" ),
	SetFloatGameState: ( /* fgamestate*/ whichFloatGameState, /* real*/ value ) => /* nothing */ warnOnce( "SetFloatGameState not yet implemented" ),
	SetIntegerGameState: ( /* igamestate*/ whichIntegerGameState, /* integer*/ value ) => /* nothing */ warnOnce( "SetIntegerGameState not yet implemented" ),
	SetTutorialCleared: cleared => /* nothing */ warnOnce( "SetTutorialCleared not yet implemented" ),
	SetMissionAvailable: ( /* integer*/ campaignNumber, /* integer*/ missionNumber, /* boolean*/ available ) => /* nothing */ warnOnce( "SetMissionAvailable not yet implemented" ),
	SetCampaignAvailable: ( /* integer*/ campaignNumber, /* boolean*/ available ) => /* nothing */ warnOnce( "SetCampaignAvailable not yet implemented" ),
	SetOpCinematicAvailable: ( /* integer*/ campaignNumber, /* boolean*/ available ) => /* nothing */ warnOnce( "SetOpCinematicAvailable not yet implemented" ),
	SetEdCinematicAvailable: ( /* integer*/ campaignNumber, /* boolean*/ available ) => /* nothing */ warnOnce( "SetEdCinematicAvailable not yet implemented" ),
	GetDefaultDifficulty: ( /* nothing*/ ) => /* gamedifficulty */ warnOnce( "GetDefaultDifficulty not yet implemented" ),
	SetDefaultDifficulty: g => /* nothing */ warnOnce( "SetDefaultDifficulty not yet implemented" ),
	SetCustomCampaignButtonVisible: ( /* integer*/ whichButton, /* boolean*/ visible ) => /* nothing */ warnOnce( "SetCustomCampaignButtonVisible not yet implemented" ),
	GetCustomCampaignButtonVisible: whichButton => /* boolean */ warnOnce( "GetCustomCampaignButtonVisible not yet implemented" ),
	DoNotSaveReplay: ( /* nothing*/ ) => /* nothing*/ warnOnce( "DoNotSaveReplay not yet implemented" ),
	DialogCreate: ( /* nothing*/ ) => /* dialog*/ warnOnce( "DialogCreate not yet implemented" ),
	DialogDestroy: whichDialog => /* nothing*/ warnOnce( "DialogDestroy not yet implemented" ),
	DialogClear: whichDialog => /* nothing*/ warnOnce( "DialogClear not yet implemented" ),
	DialogSetMessage: ( /* dialog*/ whichDialog, /* string*/ messageText ) => /* nothing*/ warnOnce( "DialogSetMessage not yet implemented" ),
	DialogAddButton: ( /* dialog*/ whichDialog, /* string*/ buttonText, /* integer*/ hotkey ) => /* button*/ warnOnce( "DialogAddButton not yet implemented" ),
	DialogAddQuitButton: ( /* dialog*/ whichDialog, /* boolean*/ doScoreScreen, /* string*/ buttonText, /* integer*/ hotkey ) => /* button*/ warnOnce( "DialogAddQuitButton not yet implemented" ),
	DialogDisplay: ( /* player*/ whichPlayer, /* dialog*/ whichDialog, /* boolean*/ flag ) => /* nothing */ warnOnce( "DialogDisplay not yet implemented" ),
	ReloadGameCachesFromDisk: ( /* nothing*/ ) => /* boolean */ warnOnce( "ReloadGameCachesFromDisk not yet implemented" ),
	InitGameCache: campaignFile => /* gamecache */ warnOnce( "InitGameCache not yet implemented" ),
	SaveGameCache: whichCache => /* boolean */ warnOnce( "SaveGameCache not yet implemented" ),
	StoreInteger: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key, /* integer*/ value ) => /* nothing */ warnOnce( "StoreInteger not yet implemented" ),
	StoreReal: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key, /* real*/ value ) => /* nothing */ warnOnce( "StoreReal not yet implemented" ),
	StoreBoolean: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key, /* boolean*/ value ) => /* nothing */ warnOnce( "StoreBoolean not yet implemented" ),
	StoreUnit: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key, /* unit*/ whichUnit ) => /* boolean */ warnOnce( "StoreUnit not yet implemented" ),
	StoreString: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key, /* string*/ value ) => /* boolean*/ warnOnce( "StoreString not yet implemented" ),
	SyncStoredInteger: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* nothing*/ warnOnce( "SyncStoredInteger not yet implemented" ),
	SyncStoredReal: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* nothing*/ warnOnce( "SyncStoredReal not yet implemented" ),
	SyncStoredBoolean: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* nothing*/ warnOnce( "SyncStoredBoolean not yet implemented" ),
	SyncStoredUnit: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* nothing*/ warnOnce( "SyncStoredUnit not yet implemented" ),
	SyncStoredString: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* nothing */ warnOnce( "SyncStoredString not yet implemented" ),
	HaveStoredInteger: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* boolean */ warnOnce( "HaveStoredInteger not yet implemented" ),
	HaveStoredReal: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* boolean */ warnOnce( "HaveStoredReal not yet implemented" ),
	HaveStoredBoolean: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* boolean */ warnOnce( "HaveStoredBoolean not yet implemented" ),
	HaveStoredUnit: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* boolean */ warnOnce( "HaveStoredUnit not yet implemented" ),
	HaveStoredString: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* boolean */ warnOnce( "HaveStoredString not yet implemented" ),
	FlushGameCache: cache => /* nothing */ warnOnce( "FlushGameCache not yet implemented" ),
	FlushStoredMission: ( /* gamecache*/ cache, /* string*/ missionKey ) => /* nothing */ warnOnce( "FlushStoredMission not yet implemented" ),
	FlushStoredInteger: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* nothing */ warnOnce( "FlushStoredInteger not yet implemented" ),
	FlushStoredReal: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* nothing */ warnOnce( "FlushStoredReal not yet implemented" ),
	FlushStoredBoolean: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* nothing */ warnOnce( "FlushStoredBoolean not yet implemented" ),
	FlushStoredUnit: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* nothing */ warnOnce( "FlushStoredUnit not yet implemented" ),
	FlushStoredString: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* nothing */ warnOnce( "FlushStoredString not yet implemented" ),
	GetStoredInteger: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* integer */ warnOnce( "GetStoredInteger not yet implemented" ),
	GetStoredReal: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* real */ warnOnce( "GetStoredReal not yet implemented" ),
	GetStoredBoolean: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* boolean */ warnOnce( "GetStoredBoolean not yet implemented" ),
	GetStoredString: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key ) => /* string */ warnOnce( "GetStoredString not yet implemented" ),
	RestoreUnit: ( /* gamecache*/ cache, /* string*/ missionKey, /* string*/ key, /* player*/ forWhichPlayer, /* real*/ x, /* real*/ y, /* real*/ facing ) => /* unit */ warnOnce( "RestoreUnit not yet implemented" ),
	InitHashtable: ( /* nothing*/ ) => /* hashtable */ warnOnce( "InitHashtable not yet implemented" ),
	SaveInteger: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* integer*/ value ) => /* nothing */ warnOnce( "SaveInteger not yet implemented" ),
	SaveReal: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* real*/ value ) => /* nothing */ warnOnce( "SaveReal not yet implemented" ),
	SaveBoolean: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* boolean*/ value ) => /* nothing */ warnOnce( "SaveBoolean not yet implemented" ),
	SaveStr: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* string*/ value ) => /* boolean */ warnOnce( "SaveStr not yet implemented" ),
	SavePlayerHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* player*/ whichPlayer ) => /* boolean */ warnOnce( "SavePlayerHandle not yet implemented" ),
	SaveWidgetHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* widget*/ whichWidget ) => /* boolean */ warnOnce( "SaveWidgetHandle not yet implemented" ),
	SaveDestructableHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* destructable*/ whichDestructable ) => /* boolean */ warnOnce( "SaveDestructableHandle not yet implemented" ),
	SaveItemHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* item*/ whichItem ) => /* boolean */ warnOnce( "SaveItemHandle not yet implemented" ),
	SaveUnitHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* unit*/ whichUnit ) => /* boolean */ warnOnce( "SaveUnitHandle not yet implemented" ),
	SaveAbilityHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* ability*/ whichAbility ) => /* boolean */ warnOnce( "SaveAbilityHandle not yet implemented" ),
	SaveTimerHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* timer*/ whichTimer ) => /* boolean */ warnOnce( "SaveTimerHandle not yet implemented" ),
	SaveTriggerHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* trigger*/ whichTrigger ) => /* boolean */ warnOnce( "SaveTriggerHandle not yet implemented" ),
	SaveTriggerConditionHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* triggercondition*/ whichTriggercondition ) => /* boolean */ warnOnce( "SaveTriggerConditionHandle not yet implemented" ),
	SaveTriggerActionHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* triggeraction*/ whichTriggeraction ) => /* boolean */ warnOnce( "SaveTriggerActionHandle not yet implemented" ),
	SaveTriggerEventHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* event*/ whichEvent ) => /* boolean */ warnOnce( "SaveTriggerEventHandle not yet implemented" ),
	SaveForceHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* force*/ whichForce ) => /* boolean */ warnOnce( "SaveForceHandle not yet implemented" ),
	SaveGroupHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* group*/ whichGroup ) => /* boolean */ warnOnce( "SaveGroupHandle not yet implemented" ),
	SaveLocationHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* location*/ whichLocation ) => /* boolean */ warnOnce( "SaveLocationHandle not yet implemented" ),
	SaveRectHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* rect*/ whichRect ) => /* boolean */ warnOnce( "SaveRectHandle not yet implemented" ),
	SaveBooleanExprHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* boolexpr*/ whichBoolexpr ) => /* boolean */ warnOnce( "SaveBooleanExprHandle not yet implemented" ),
	SaveSoundHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* sound*/ whichSound ) => /* boolean */ warnOnce( "SaveSoundHandle not yet implemented" ),
	SaveEffectHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* effect*/ whichEffect ) => /* boolean */ warnOnce( "SaveEffectHandle not yet implemented" ),
	SaveUnitPoolHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* unitpool*/ whichUnitpool ) => /* boolean */ warnOnce( "SaveUnitPoolHandle not yet implemented" ),
	SaveItemPoolHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* itempool*/ whichItempool ) => /* boolean */ warnOnce( "SaveItemPoolHandle not yet implemented" ),
	SaveQuestHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* quest*/ whichQuest ) => /* boolean */ warnOnce( "SaveQuestHandle not yet implemented" ),
	SaveQuestItemHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* questitem*/ whichQuestitem ) => /* boolean */ warnOnce( "SaveQuestItemHandle not yet implemented" ),
	SaveDefeatConditionHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* defeatcondition*/ whichDefeatcondition ) => /* boolean */ warnOnce( "SaveDefeatConditionHandle not yet implemented" ),
	SaveTimerDialogHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* timerdialog*/ whichTimerdialog ) => /* boolean */ warnOnce( "SaveTimerDialogHandle not yet implemented" ),
	SaveLeaderboardHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* leaderboard*/ whichLeaderboard ) => /* boolean */ warnOnce( "SaveLeaderboardHandle not yet implemented" ),
	SaveMultiboardHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* multiboard*/ whichMultiboard ) => /* boolean */ warnOnce( "SaveMultiboardHandle not yet implemented" ),
	SaveMultiboardItemHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* multiboarditem*/ whichMultiboarditem ) => /* boolean */ warnOnce( "SaveMultiboardItemHandle not yet implemented" ),
	SaveTrackableHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* trackable*/ whichTrackable ) => /* boolean */ warnOnce( "SaveTrackableHandle not yet implemented" ),
	SaveDialogHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* dialog*/ whichDialog ) => /* boolean */ warnOnce( "SaveDialogHandle not yet implemented" ),
	SaveButtonHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* button*/ whichButton ) => /* boolean */ warnOnce( "SaveButtonHandle not yet implemented" ),
	SaveTextTagHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* texttag*/ whichTexttag ) => /* boolean */ warnOnce( "SaveTextTagHandle not yet implemented" ),
	SaveLightningHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* lightning*/ whichLightning ) => /* boolean */ warnOnce( "SaveLightningHandle not yet implemented" ),
	SaveImageHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* image*/ whichImage ) => /* boolean */ warnOnce( "SaveImageHandle not yet implemented" ),
	SaveUbersplatHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* ubersplat*/ whichUbersplat ) => /* boolean */ warnOnce( "SaveUbersplatHandle not yet implemented" ),
	SaveRegionHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* region*/ whichRegion ) => /* boolean */ warnOnce( "SaveRegionHandle not yet implemented" ),
	SaveFogStateHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* fogstate*/ whichFogState ) => /* boolean */ warnOnce( "SaveFogStateHandle not yet implemented" ),
	SaveFogModifierHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* fogmodifier*/ whichFogModifier ) => /* boolean */ warnOnce( "SaveFogModifierHandle not yet implemented" ),
	SaveAgentHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* agent*/ whichAgent ) => /* boolean */ warnOnce( "SaveAgentHandle not yet implemented" ),
	SaveHashtableHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey, /* hashtable*/ whichHashtable ) => /* boolean */ warnOnce( "SaveHashtableHandle not yet implemented" ),
	LoadInteger: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* integer */ warnOnce( "LoadInteger not yet implemented" ),
	LoadReal: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* real */ warnOnce( "LoadReal not yet implemented" ),
	LoadBoolean: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* boolean */ warnOnce( "LoadBoolean not yet implemented" ),
	LoadStr: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* string */ warnOnce( "LoadStr not yet implemented" ),
	LoadPlayerHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* player */ warnOnce( "LoadPlayerHandle not yet implemented" ),
	LoadWidgetHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* widget */ warnOnce( "LoadWidgetHandle not yet implemented" ),
	LoadDestructableHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* destructable */ warnOnce( "LoadDestructableHandle not yet implemented" ),
	LoadItemHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* item */ warnOnce( "LoadItemHandle not yet implemented" ),
	LoadUnitHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* unit */ warnOnce( "LoadUnitHandle not yet implemented" ),
	LoadAbilityHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* ability */ warnOnce( "LoadAbilityHandle not yet implemented" ),
	LoadTimerHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* timer */ warnOnce( "LoadTimerHandle not yet implemented" ),
	LoadTriggerHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* trigger */ warnOnce( "LoadTriggerHandle not yet implemented" ),
	LoadTriggerConditionHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* triggercondition */ warnOnce( "LoadTriggerConditionHandle not yet implemented" ),
	LoadTriggerActionHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* triggeraction */ warnOnce( "LoadTriggerActionHandle not yet implemented" ),
	LoadTriggerEventHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* event */ warnOnce( "LoadTriggerEventHandle not yet implemented" ),
	LoadForceHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* force */ warnOnce( "LoadForceHandle not yet implemented" ),
	LoadGroupHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* group */ warnOnce( "LoadGroupHandle not yet implemented" ),
	LoadLocationHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* location */ warnOnce( "LoadLocationHandle not yet implemented" ),
	LoadRectHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* rect */ warnOnce( "LoadRectHandle not yet implemented" ),
	LoadBooleanExprHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* boolexpr */ warnOnce( "LoadBooleanExprHandle not yet implemented" ),
	LoadSoundHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* sound */ warnOnce( "LoadSoundHandle not yet implemented" ),
	LoadEffectHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* effect */ warnOnce( "LoadEffectHandle not yet implemented" ),
	LoadUnitPoolHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* unitpool */ warnOnce( "LoadUnitPoolHandle not yet implemented" ),
	LoadItemPoolHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* itempool */ warnOnce( "LoadItemPoolHandle not yet implemented" ),
	LoadQuestHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* quest */ warnOnce( "LoadQuestHandle not yet implemented" ),
	LoadQuestItemHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* questitem */ warnOnce( "LoadQuestItemHandle not yet implemented" ),
	LoadDefeatConditionHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* defeatcondition */ warnOnce( "LoadDefeatConditionHandle not yet implemented" ),
	LoadTimerDialogHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* timerdialog */ warnOnce( "LoadTimerDialogHandle not yet implemented" ),
	LoadLeaderboardHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* leaderboard */ warnOnce( "LoadLeaderboardHandle not yet implemented" ),
	LoadMultiboardHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* multiboard */ warnOnce( "LoadMultiboardHandle not yet implemented" ),
	LoadMultiboardItemHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* multiboarditem */ warnOnce( "LoadMultiboardItemHandle not yet implemented" ),
	LoadTrackableHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* trackable */ warnOnce( "LoadTrackableHandle not yet implemented" ),
	LoadDialogHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* dialog */ warnOnce( "LoadDialogHandle not yet implemented" ),
	LoadButtonHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* button */ warnOnce( "LoadButtonHandle not yet implemented" ),
	LoadTextTagHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* texttag */ warnOnce( "LoadTextTagHandle not yet implemented" ),
	LoadLightningHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* lightning */ warnOnce( "LoadLightningHandle not yet implemented" ),
	LoadImageHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* image */ warnOnce( "LoadImageHandle not yet implemented" ),
	LoadUbersplatHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* ubersplat */ warnOnce( "LoadUbersplatHandle not yet implemented" ),
	LoadRegionHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* region */ warnOnce( "LoadRegionHandle not yet implemented" ),
	LoadFogStateHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* fogstate */ warnOnce( "LoadFogStateHandle not yet implemented" ),
	LoadFogModifierHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* fogmodifier */ warnOnce( "LoadFogModifierHandle not yet implemented" ),
	LoadHashtableHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* hashtable */ warnOnce( "LoadHashtableHandle not yet implemented" ),
	HaveSavedInteger: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* boolean */ warnOnce( "HaveSavedInteger not yet implemented" ),
	HaveSavedReal: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* boolean */ warnOnce( "HaveSavedReal not yet implemented" ),
	HaveSavedBoolean: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* boolean */ warnOnce( "HaveSavedBoolean not yet implemented" ),
	HaveSavedString: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* boolean */ warnOnce( "HaveSavedString not yet implemented" ),
	HaveSavedHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* boolean */ warnOnce( "HaveSavedHandle not yet implemented" ),
	RemoveSavedInteger: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* nothing */ warnOnce( "RemoveSavedInteger not yet implemented" ),
	RemoveSavedReal: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* nothing */ warnOnce( "RemoveSavedReal not yet implemented" ),
	RemoveSavedBoolean: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* nothing */ warnOnce( "RemoveSavedBoolean not yet implemented" ),
	RemoveSavedString: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* nothing */ warnOnce( "RemoveSavedString not yet implemented" ),
	RemoveSavedHandle: ( /* hashtable*/ table, /* integer*/ parentKey, /* integer*/ childKey ) => /* nothing */ warnOnce( "RemoveSavedHandle not yet implemented" ),
	FlushParentHashtable: table => /* nothing */ warnOnce( "FlushParentHashtable not yet implemented" ),
	FlushChildHashtable: ( /* hashtable*/ table, /* integer*/ parentKey ) => /* nothing*/ warnOnce( "FlushChildHashtable not yet implemented" ),
	GetRandomInt: ( /* integer*/ lowBound, /* integer*/ highBound ) => /* integer*/ warnOnce( "GetRandomInt not yet implemented" ),
	GetRandomReal: ( /* real*/ lowBound, /* real*/ highBound ) => /* real*/ warnOnce( "GetRandomReal not yet implemented" ),
	CreateUnitPool: ( /* nothing*/ ) => /* unitpool*/ warnOnce( "CreateUnitPool not yet implemented" ),
	DestroyUnitPool: whichPool => /* nothing*/ warnOnce( "DestroyUnitPool not yet implemented" ),
	UnitPoolAddUnitType: ( /* unitpool*/ whichPool, /* integer*/ unitId, /* real*/ weight ) => /* nothing*/ warnOnce( "UnitPoolAddUnitType not yet implemented" ),
	UnitPoolRemoveUnitType: ( /* unitpool*/ whichPool, /* integer*/ unitId ) => /* nothing*/ warnOnce( "UnitPoolRemoveUnitType not yet implemented" ),
	PlaceRandomUnit: ( /* unitpool*/ whichPool, /* player*/ forWhichPlayer, /* real*/ x, /* real*/ y, /* real*/ facing ) => /* unit*/ warnOnce( "PlaceRandomUnit not yet implemented" ),
	CreateItemPool: ( /* nothing*/ ) => /* itempool*/ warnOnce( "CreateItemPool not yet implemented" ),
	DestroyItemPool: whichItemPool => /* nothing*/ warnOnce( "DestroyItemPool not yet implemented" ),
	ItemPoolAddItemType: ( /* itempool*/ whichItemPool, /* integer*/ itemId, /* real*/ weight ) => /* nothing*/ warnOnce( "ItemPoolAddItemType not yet implemented" ),
	ItemPoolRemoveItemType: ( /* itempool*/ whichItemPool, /* integer*/ itemId ) => /* nothing*/ warnOnce( "ItemPoolRemoveItemType not yet implemented" ),
	PlaceRandomItem: ( /* itempool*/ whichItemPool, /* real*/ x, /* real*/ y ) => /* item*/ warnOnce( "PlaceRandomItem not yet implemented" ),
	ChooseRandomCreep: level => /* integer*/ warnOnce( "ChooseRandomCreep not yet implemented" ),
	ChooseRandomNPBuilding: ( /* nothing*/ ) => /* integer*/ warnOnce( "ChooseRandomNPBuilding not yet implemented" ),
	ChooseRandomItem: level => /* integer*/ warnOnce( "ChooseRandomItem not yet implemented" ),
	ChooseRandomItemEx: ( /* itemtype*/ whichType, /* integer*/ level ) => /* integer*/ warnOnce( "ChooseRandomItemEx not yet implemented" ),
	SetRandomSeed: seed => /* nothing*/ warnOnce( "SetRandomSeed not yet implemented" ),
	SetTerrainFog: ( /* real*/ a, /* real*/ b, /* real*/ c, /* real*/ d, /* real*/ e ) => /* nothing*/ warnOnce( "SetTerrainFog not yet implemented" ),
	ResetTerrainFog: ( /* nothing*/ ) => /* nothing*/ warnOnce( "ResetTerrainFog not yet implemented" ),
	SetUnitFog: ( /* real*/ a, /* real*/ b, /* real*/ c, /* real*/ d, /* real*/ e ) => /* nothing*/ warnOnce( "SetUnitFog not yet implemented" ),
	SetTerrainFogEx: ( /* integer*/ style, /* real*/ zstart, /* real*/ zend, /* real*/ density, /* real*/ red, /* real*/ green, /* real*/ blue ) => /* nothing*/ warnOnce( "SetTerrainFogEx not yet implemented" ),
	DisplayTextToPlayer: ( /* player*/ toPlayer, /* real*/ x, /* real*/ y, /* string*/ message ) => /* nothing*/ warnOnce( "DisplayTextToPlayer not yet implemented" ),
	DisplayTimedTextToPlayer: ( /* player*/ toPlayer, /* real*/ x, /* real*/ y, /* real*/ duration, /* string*/ message ) => /* nothing*/ warnOnce( "DisplayTimedTextToPlayer not yet implemented" ),
	DisplayTimedTextFromPlayer: ( /* player*/ toPlayer, /* real*/ x, /* real*/ y, /* real*/ duration, /* string*/ message ) => /* nothing*/ warnOnce( "DisplayTimedTextFromPlayer not yet implemented" ),
	ClearTextMessages: ( /* nothing*/ ) => /* nothing*/ warnOnce( "ClearTextMessages not yet implemented" ),
	SetDayNightModels: ( /* string*/ terrainDNCFile, /* string*/ unitDNCFile ) => /* nothing*/ warnOnce( "SetDayNightModels not yet implemented" ),
	SetSkyModel: skyModelFile => /* nothing*/ warnOnce( "SetSkyModel not yet implemented" ),
	EnableUserControl: b => /* nothing*/ warnOnce( "EnableUserControl not yet implemented" ),
	EnableUserUI: b => /* nothing*/ warnOnce( "EnableUserUI not yet implemented" ),
	SuspendTimeOfDay: b => /* nothing*/ warnOnce( "SuspendTimeOfDay not yet implemented" ),
	SetTimeOfDayScale: r => /* nothing*/ warnOnce( "SetTimeOfDayScale not yet implemented" ),
	GetTimeOfDayScale: ( /* nothing*/ ) => /* real*/ warnOnce( "GetTimeOfDayScale not yet implemented" ),
	ShowInterface: ( /* boolean*/ flag, /* real*/ fadeDuration ) => /* nothing*/ warnOnce( "ShowInterface not yet implemented" ),
	PauseGame: flag => /* nothing*/ warnOnce( "PauseGame not yet implemented" ),
	UnitAddIndicator: ( /* unit*/ whichUnit, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "UnitAddIndicator not yet implemented" ),
	AddIndicator: ( /* widget*/ whichWidget, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "AddIndicator not yet implemented" ),
	PingMinimap: ( /* real*/ x, /* real*/ y, /* real*/ duration ) => /* nothing*/ warnOnce( "PingMinimap not yet implemented" ),
	PingMinimapEx: ( /* real*/ x, /* real*/ y, /* real*/ duration, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* boolean*/ extraEffects ) => /* nothing*/ warnOnce( "PingMinimapEx not yet implemented" ),
	EnableOcclusion: flag => /* nothing*/ warnOnce( "EnableOcclusion not yet implemented" ),
	SetIntroShotText: introText => /* nothing*/ warnOnce( "SetIntroShotText not yet implemented" ),
	SetIntroShotModel: introModelPath => /* nothing*/ warnOnce( "SetIntroShotModel not yet implemented" ),
	EnableWorldFogBoundary: b => /* nothing*/ warnOnce( "EnableWorldFogBoundary not yet implemented" ),
	PlayModelCinematic: modelName => /* nothing*/ warnOnce( "PlayModelCinematic not yet implemented" ),
	PlayCinematic: movieName => /* nothing*/ warnOnce( "PlayCinematic not yet implemented" ),
	ForceUIKey: key => /* nothing*/ warnOnce( "ForceUIKey not yet implemented" ),
	ForceUICancel: ( /* nothing*/ ) => /* nothing*/ warnOnce( "ForceUICancel not yet implemented" ),
	DisplayLoadDialog: ( /* nothing*/ ) => /* nothing*/ warnOnce( "DisplayLoadDialog not yet implemented" ),
	SetAltMinimapIcon: iconPath => /* nothing*/ warnOnce( "SetAltMinimapIcon not yet implemented" ),
	DisableRestartMission: flag => /* nothing*/ warnOnce( "DisableRestartMission not yet implemented" ),
	CreateTextTag: ( /* nothing*/ ) => /* texttag*/ warnOnce( "CreateTextTag not yet implemented" ),
	DestroyTextTag: t => /* nothing*/ warnOnce( "DestroyTextTag not yet implemented" ),
	SetTextTagText: ( /* texttag*/ t, /* string*/ s, /* real*/ height ) => /* nothing*/ warnOnce( "SetTextTagText not yet implemented" ),
	SetTextTagPos: ( /* texttag*/ t, /* real*/ x, /* real*/ y, /* real*/ heightOffset ) => /* nothing*/ warnOnce( "SetTextTagPos not yet implemented" ),
	SetTextTagPosUnit: ( /* texttag*/ t, /* unit*/ whichUnit, /* real*/ heightOffset ) => /* nothing*/ warnOnce( "SetTextTagPosUnit not yet implemented" ),
	SetTextTagColor: ( /* texttag*/ t, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "SetTextTagColor not yet implemented" ),
	SetTextTagVelocity: ( /* texttag*/ t, /* real*/ xvel, /* real*/ yvel ) => /* nothing*/ warnOnce( "SetTextTagVelocity not yet implemented" ),
	SetTextTagVisibility: ( /* texttag*/ t, /* boolean*/ flag ) => /* nothing*/ warnOnce( "SetTextTagVisibility not yet implemented" ),
	SetTextTagSuspended: ( /* texttag*/ t, /* boolean*/ flag ) => /* nothing*/ warnOnce( "SetTextTagSuspended not yet implemented" ),
	SetTextTagPermanent: ( /* texttag*/ t, /* boolean*/ flag ) => /* nothing*/ warnOnce( "SetTextTagPermanent not yet implemented" ),
	SetTextTagAge: ( /* texttag*/ t, /* real*/ age ) => /* nothing*/ warnOnce( "SetTextTagAge not yet implemented" ),
	SetTextTagLifespan: ( /* texttag*/ t, /* real*/ lifespan ) => /* nothing*/ warnOnce( "SetTextTagLifespan not yet implemented" ),
	SetTextTagFadepoint: ( /* texttag*/ t, /* real*/ fadepoint ) => /* nothing*/ warnOnce( "SetTextTagFadepoint not yet implemented" ),
	SetReservedLocalHeroButtons: reserved => /* nothing*/ warnOnce( "SetReservedLocalHeroButtons not yet implemented" ),
	GetAllyColorFilterState: ( /* nothing*/ ) => /* integer*/ warnOnce( "GetAllyColorFilterState not yet implemented" ),
	SetAllyColorFilterState: state => /* nothing*/ warnOnce( "SetAllyColorFilterState not yet implemented" ),
	GetCreepCampFilterState: ( /* nothing*/ ) => /* boolean*/ warnOnce( "GetCreepCampFilterState not yet implemented" ),
	SetCreepCampFilterState: state => /* nothing*/ warnOnce( "SetCreepCampFilterState not yet implemented" ),
	EnableMinimapFilterButtons: ( /* boolean*/ enableAlly, /* boolean*/ enableCreep ) => /* nothing*/ warnOnce( "EnableMinimapFilterButtons not yet implemented" ),
	EnableDragSelect: ( /* boolean*/ state, /* boolean*/ ui ) => /* nothing*/ warnOnce( "EnableDragSelect not yet implemented" ),
	EnablePreSelect: ( /* boolean*/ state, /* boolean*/ ui ) => /* nothing*/ warnOnce( "EnablePreSelect not yet implemented" ),
	EnableSelect: ( /* boolean*/ state, /* boolean*/ ui ) => /* nothing*/ warnOnce( "EnableSelect not yet implemented" ),
	CreateTrackable: ( /* string*/ trackableModelPath, /* real*/ x, /* real*/ y, /* real*/ facing ) => /* trackable*/ warnOnce( "CreateTrackable not yet implemented" ),
	CreateQuest: ( /* nothing*/ ) => /* quest*/ warnOnce( "CreateQuest not yet implemented" ),
	DestroyQuest: whichQuest => /* nothing*/ warnOnce( "DestroyQuest not yet implemented" ),
	QuestSetTitle: ( /* quest*/ whichQuest, /* string*/ title ) => /* nothing*/ warnOnce( "QuestSetTitle not yet implemented" ),
	QuestSetDescription: ( /* quest*/ whichQuest, /* string*/ description ) => /* nothing*/ warnOnce( "QuestSetDescription not yet implemented" ),
	QuestSetIconPath: ( /* quest*/ whichQuest, /* string*/ iconPath ) => /* nothing*/ warnOnce( "QuestSetIconPath not yet implemented" ),
	QuestSetRequired: ( /* quest*/ whichQuest, /* boolean*/ required ) => /* nothing*/ warnOnce( "QuestSetRequired not yet implemented" ),
	QuestSetCompleted: ( /* quest*/ whichQuest, /* boolean*/ completed ) => /* nothing*/ warnOnce( "QuestSetCompleted not yet implemented" ),
	QuestSetDiscovered: ( /* quest*/ whichQuest, /* boolean*/ discovered ) => /* nothing*/ warnOnce( "QuestSetDiscovered not yet implemented" ),
	QuestSetFailed: ( /* quest*/ whichQuest, /* boolean*/ failed ) => /* nothing*/ warnOnce( "QuestSetFailed not yet implemented" ),
	QuestSetEnabled: ( /* quest*/ whichQuest, /* boolean*/ enabled ) => /* nothing*/ warnOnce( "QuestSetEnabled not yet implemented" ),
	IsQuestRequired: whichQuest => /* boolean*/ warnOnce( "IsQuestRequired not yet implemented" ),
	IsQuestCompleted: whichQuest => /* boolean*/ warnOnce( "IsQuestCompleted not yet implemented" ),
	IsQuestDiscovered: whichQuest => /* boolean*/ warnOnce( "IsQuestDiscovered not yet implemented" ),
	IsQuestFailed: whichQuest => /* boolean*/ warnOnce( "IsQuestFailed not yet implemented" ),
	IsQuestEnabled: whichQuest => /* boolean*/ warnOnce( "IsQuestEnabled not yet implemented" ),
	QuestCreateItem: whichQuest => /* questitem*/ warnOnce( "QuestCreateItem not yet implemented" ),
	QuestItemSetDescription: ( /* questitem*/ whichQuestItem, /* string*/ description ) => /* nothing*/ warnOnce( "QuestItemSetDescription not yet implemented" ),
	QuestItemSetCompleted: ( /* questitem*/ whichQuestItem, /* boolean*/ completed ) => /* nothing*/ warnOnce( "QuestItemSetCompleted not yet implemented" ),
	IsQuestItemCompleted: whichQuestItem => /* boolean*/ warnOnce( "IsQuestItemCompleted not yet implemented" ),
	CreateDefeatCondition: ( /* nothing*/ ) => /* defeatcondition*/ warnOnce( "CreateDefeatCondition not yet implemented" ),
	DestroyDefeatCondition: whichCondition => /* nothing*/ warnOnce( "DestroyDefeatCondition not yet implemented" ),
	DefeatConditionSetDescription: ( /* defeatcondition*/ whichCondition, /* string*/ description ) => /* nothing*/ warnOnce( "DefeatConditionSetDescription not yet implemented" ),
	FlashQuestDialogButton: ( /* nothing*/ ) => /* nothing*/ warnOnce( "FlashQuestDialogButton not yet implemented" ),
	ForceQuestDialogUpdate: ( /* nothing*/ ) => /* nothing*/ warnOnce( "ForceQuestDialogUpdate not yet implemented" ),
	DestroyTimerDialog: whichDialog => /* nothing*/ warnOnce( "DestroyTimerDialog not yet implemented" ),
	TimerDialogSetTitle: ( /* timerdialog*/ whichDialog, /* string*/ title ) => /* nothing*/ warnOnce( "TimerDialogSetTitle not yet implemented" ),
	TimerDialogSetTitleColor: ( /* timerdialog*/ whichDialog, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "TimerDialogSetTitleColor not yet implemented" ),
	TimerDialogSetTimeColor: ( /* timerdialog*/ whichDialog, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "TimerDialogSetTimeColor not yet implemented" ),
	TimerDialogSetSpeed: ( /* timerdialog*/ whichDialog, /* real*/ speedMultFactor ) => /* nothing*/ warnOnce( "TimerDialogSetSpeed not yet implemented" ),
	TimerDialogDisplay: ( /* timerdialog*/ whichDialog, /* boolean*/ display ) => /* nothing*/ warnOnce( "TimerDialogDisplay not yet implemented" ),
	IsTimerDialogDisplayed: whichDialog => /* boolean*/ warnOnce( "IsTimerDialogDisplayed not yet implemented" ),
	TimerDialogSetRealTimeRemaining: ( /* timerdialog*/ whichDialog, /* real*/ timeRemaining ) => /* nothing*/ warnOnce( "TimerDialogSetRealTimeRemaining not yet implemented" ),
	CreateLeaderboard: ( /* nothing*/ ) => /* leaderboard*/ warnOnce( "CreateLeaderboard not yet implemented" ),
	DestroyLeaderboard: lb => /* nothing*/ warnOnce( "DestroyLeaderboard not yet implemented" ),
	LeaderboardDisplay: ( /* leaderboard*/ lb, /* boolean*/ show ) => /* nothing*/ warnOnce( "LeaderboardDisplay not yet implemented" ),
	IsLeaderboardDisplayed: lb => /* boolean*/ warnOnce( "IsLeaderboardDisplayed not yet implemented" ),
	LeaderboardGetItemCount: lb => /* integer*/ warnOnce( "LeaderboardGetItemCount not yet implemented" ),
	LeaderboardSetSizeByItemCount: ( /* leaderboard*/ lb, /* integer*/ count ) => /* nothing*/ warnOnce( "LeaderboardSetSizeByItemCount not yet implemented" ),
	LeaderboardAddItem: ( /* leaderboard*/ lb, /* string*/ label, /* integer*/ value, /* player*/ p ) => /* nothing*/ warnOnce( "LeaderboardAddItem not yet implemented" ),
	LeaderboardRemoveItem: ( /* leaderboard*/ lb, /* integer*/ index ) => /* nothing*/ warnOnce( "LeaderboardRemoveItem not yet implemented" ),
	LeaderboardRemovePlayerItem: ( /* leaderboard*/ lb, /* player*/ p ) => /* nothing*/ warnOnce( "LeaderboardRemovePlayerItem not yet implemented" ),
	LeaderboardClear: lb => /* nothing*/ warnOnce( "LeaderboardClear not yet implemented" ),
	LeaderboardSortItemsByValue: ( /* leaderboard*/ lb, /* boolean*/ ascending ) => /* nothing*/ warnOnce( "LeaderboardSortItemsByValue not yet implemented" ),
	LeaderboardSortItemsByPlayer: ( /* leaderboard*/ lb, /* boolean*/ ascending ) => /* nothing*/ warnOnce( "LeaderboardSortItemsByPlayer not yet implemented" ),
	LeaderboardSortItemsByLabel: ( /* leaderboard*/ lb, /* boolean*/ ascending ) => /* nothing*/ warnOnce( "LeaderboardSortItemsByLabel not yet implemented" ),
	LeaderboardHasPlayerItem: ( /* leaderboard*/ lb, /* player*/ p ) => /* boolean*/ warnOnce( "LeaderboardHasPlayerItem not yet implemented" ),
	LeaderboardGetPlayerIndex: ( /* leaderboard*/ lb, /* player*/ p ) => /* integer*/ warnOnce( "LeaderboardGetPlayerIndex not yet implemented" ),
	LeaderboardSetLabel: ( /* leaderboard*/ lb, /* string*/ label ) => /* nothing*/ warnOnce( "LeaderboardSetLabel not yet implemented" ),
	LeaderboardGetLabelText: lb => /* string*/ warnOnce( "LeaderboardGetLabelText not yet implemented" ),
	PlayerSetLeaderboard: ( /* player*/ toPlayer, /* leaderboard*/ lb ) => /* nothing*/ warnOnce( "PlayerSetLeaderboard not yet implemented" ),
	PlayerGetLeaderboard: toPlayer => /* leaderboard*/ warnOnce( "PlayerGetLeaderboard not yet implemented" ),
	LeaderboardSetLabelColor: ( /* leaderboard*/ lb, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "LeaderboardSetLabelColor not yet implemented" ),
	LeaderboardSetValueColor: ( /* leaderboard*/ lb, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "LeaderboardSetValueColor not yet implemented" ),
	LeaderboardSetStyle: ( /* leaderboard*/ lb, /* boolean*/ showLabel, /* boolean*/ showNames, /* boolean*/ showValues, /* boolean*/ showIcons ) => /* nothing*/ warnOnce( "LeaderboardSetStyle not yet implemented" ),
	LeaderboardSetItemValue: ( /* leaderboard*/ lb, /* integer*/ whichItem, /* integer*/ val ) => /* nothing*/ warnOnce( "LeaderboardSetItemValue not yet implemented" ),
	LeaderboardSetItemLabel: ( /* leaderboard*/ lb, /* integer*/ whichItem, /* string*/ val ) => /* nothing*/ warnOnce( "LeaderboardSetItemLabel not yet implemented" ),
	LeaderboardSetItemStyle: ( /* leaderboard*/ lb, /* integer*/ whichItem, /* boolean*/ showLabel, /* boolean*/ showValue, /* boolean*/ showIcon ) => /* nothing*/ warnOnce( "LeaderboardSetItemStyle not yet implemented" ),
	LeaderboardSetItemLabelColor: ( /* leaderboard*/ lb, /* integer*/ whichItem, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "LeaderboardSetItemLabelColor not yet implemented" ),
	LeaderboardSetItemValueColor: ( /* leaderboard*/ lb, /* integer*/ whichItem, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "LeaderboardSetItemValueColor not yet implemented" ),
	CreateMultiboard: ( /* nothing*/ ) => /* multiboard*/ warnOnce( "CreateMultiboard not yet implemented" ),
	DestroyMultiboard: lb => /* nothing*/ warnOnce( "DestroyMultiboard not yet implemented" ),
	MultiboardDisplay: ( /* multiboard*/ lb, /* boolean*/ show ) => /* nothing*/ warnOnce( "MultiboardDisplay not yet implemented" ),
	IsMultiboardDisplayed: lb => /* boolean*/ warnOnce( "IsMultiboardDisplayed not yet implemented" ),
	MultiboardMinimize: ( /* multiboard*/ lb, /* boolean*/ minimize ) => /* nothing*/ warnOnce( "MultiboardMinimize not yet implemented" ),
	IsMultiboardMinimized: lb => /* boolean*/ warnOnce( "IsMultiboardMinimized not yet implemented" ),
	MultiboardClear: lb => /* nothing*/ warnOnce( "MultiboardClear not yet implemented" ),
	MultiboardSetTitleText: ( /* multiboard*/ lb, /* string*/ label ) => /* nothing*/ warnOnce( "MultiboardSetTitleText not yet implemented" ),
	MultiboardGetTitleText: lb => /* string*/ warnOnce( "MultiboardGetTitleText not yet implemented" ),
	MultiboardSetTitleTextColor: ( /* multiboard*/ lb, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "MultiboardSetTitleTextColor not yet implemented" ),
	MultiboardGetRowCount: lb => /* integer*/ warnOnce( "MultiboardGetRowCount not yet implemented" ),
	MultiboardGetColumnCount: lb => /* integer*/ warnOnce( "MultiboardGetColumnCount not yet implemented" ),
	MultiboardSetColumnCount: ( /* multiboard*/ lb, /* integer*/ count ) => /* nothing*/ warnOnce( "MultiboardSetColumnCount not yet implemented" ),
	MultiboardSetRowCount: ( /* multiboard*/ lb, /* integer*/ count ) => /* nothing*/ warnOnce( "MultiboardSetRowCount not yet implemented" ),
	MultiboardSetItemsStyle: ( /* multiboard*/ lb, /* boolean*/ showValues, /* boolean*/ showIcons ) => /* nothing*/ warnOnce( "MultiboardSetItemsStyle not yet implemented" ),
	MultiboardSetItemsValue: ( /* multiboard*/ lb, /* string*/ value ) => /* nothing*/ warnOnce( "MultiboardSetItemsValue not yet implemented" ),
	MultiboardSetItemsValueColor: ( /* multiboard*/ lb, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "MultiboardSetItemsValueColor not yet implemented" ),
	MultiboardSetItemsWidth: ( /* multiboard*/ lb, /* real*/ width ) => /* nothing*/ warnOnce( "MultiboardSetItemsWidth not yet implemented" ),
	MultiboardSetItemsIcon: ( /* multiboard*/ lb, /* string*/ iconPath ) => /* nothing*/ warnOnce( "MultiboardSetItemsIcon not yet implemented" ),
	MultiboardGetItem: ( /* multiboard*/ lb, /* integer*/ row, /* integer*/ column ) => /* multiboarditem*/ warnOnce( "MultiboardGetItem not yet implemented" ),
	MultiboardReleaseItem: mbi => /* nothing*/ warnOnce( "MultiboardReleaseItem not yet implemented" ),
	MultiboardSetItemStyle: ( /* multiboarditem*/ mbi, /* boolean*/ showValue, /* boolean*/ showIcon ) => /* nothing*/ warnOnce( "MultiboardSetItemStyle not yet implemented" ),
	MultiboardSetItemValue: ( /* multiboarditem*/ mbi, /* string*/ val ) => /* nothing*/ warnOnce( "MultiboardSetItemValue not yet implemented" ),
	MultiboardSetItemValueColor: ( /* multiboarditem*/ mbi, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "MultiboardSetItemValueColor not yet implemented" ),
	MultiboardSetItemWidth: ( /* multiboarditem*/ mbi, /* real*/ width ) => /* nothing*/ warnOnce( "MultiboardSetItemWidth not yet implemented" ),
	MultiboardSetItemIcon: ( /* multiboarditem*/ mbi, /* string*/ iconFileName ) => /* nothing*/ warnOnce( "MultiboardSetItemIcon not yet implemented" ),
	MultiboardSuppressDisplay: flag => /* nothing*/ warnOnce( "MultiboardSuppressDisplay not yet implemented" ),
	SetCameraPosition: ( /* real*/ x, /* real*/ y ) => /* nothing*/ warnOnce( "SetCameraPosition not yet implemented" ),
	SetCameraQuickPosition: ( /* real*/ x, /* real*/ y ) => /* nothing*/ warnOnce( "SetCameraQuickPosition not yet implemented" ),
	StopCamera: ( /* nothing*/ ) => /* nothing*/ warnOnce( "StopCamera not yet implemented" ),
	ResetToGameCamera: duration => /* nothing*/ warnOnce( "ResetToGameCamera not yet implemented" ),
	PanCameraTo: ( /* real*/ x, /* real*/ y ) => /* nothing*/ warnOnce( "PanCameraTo not yet implemented" ),
	PanCameraToTimed: ( /* real*/ x, /* real*/ y, /* real*/ duration ) => /* nothing*/ warnOnce( "PanCameraToTimed not yet implemented" ),
	PanCameraToWithZ: ( /* real*/ x, /* real*/ y, /* real*/ zOffsetDest ) => /* nothing*/ warnOnce( "PanCameraToWithZ not yet implemented" ),
	PanCameraToTimedWithZ: ( /* real*/ x, /* real*/ y, /* real*/ zOffsetDest, /* real*/ duration ) => /* nothing*/ warnOnce( "PanCameraToTimedWithZ not yet implemented" ),
	SetCinematicCamera: cameraModelFile => /* nothing*/ warnOnce( "SetCinematicCamera not yet implemented" ),
	SetCameraRotateMode: ( /* real*/ x, /* real*/ y, /* real*/ radiansToSweep, /* real*/ duration ) => /* nothing*/ warnOnce( "SetCameraRotateMode not yet implemented" ),
	SetCameraField: ( /* camerafield*/ whichField, /* real*/ value, /* real*/ duration ) => /* nothing*/ warnOnce( "SetCameraField not yet implemented" ),
	AdjustCameraField: ( /* camerafield*/ whichField, /* real*/ offset, /* real*/ duration ) => /* nothing*/ warnOnce( "AdjustCameraField not yet implemented" ),
	SetCameraTargetController: ( /* unit*/ whichUnit, /* real*/ xoffset, /* real*/ yoffset, /* boolean*/ inheritOrientation ) => /* nothing*/ warnOnce( "SetCameraTargetController not yet implemented" ),
	SetCameraOrientController: ( /* unit*/ whichUnit, /* real*/ xoffset, /* real*/ yoffset ) => /* nothing*/ warnOnce( "SetCameraOrientController not yet implemented" ),
	CreateCameraSetup: ( /* nothing*/ ) => /* camerasetup*/ warnOnce( "CreateCameraSetup not yet implemented" ),
	CameraSetupSetField: ( /* camerasetup*/ whichSetup, /* camerafield*/ whichField, /* real*/ value, /* real*/ duration ) => /* nothing*/ warnOnce( "CameraSetupSetField not yet implemented" ),
	CameraSetupGetField: ( /* camerasetup*/ whichSetup, /* camerafield*/ whichField ) => /* real*/ warnOnce( "CameraSetupGetField not yet implemented" ),
	CameraSetupSetDestPosition: ( /* camerasetup*/ whichSetup, /* real*/ x, /* real*/ y, /* real*/ duration ) => /* nothing*/ warnOnce( "CameraSetupSetDestPosition not yet implemented" ),
	CameraSetupGetDestPositionLoc: whichSetup => /* location*/ warnOnce( "CameraSetupGetDestPositionLoc not yet implemented" ),
	CameraSetupGetDestPositionX: whichSetup => /* real*/ warnOnce( "CameraSetupGetDestPositionX not yet implemented" ),
	CameraSetupGetDestPositionY: whichSetup => /* real*/ warnOnce( "CameraSetupGetDestPositionY not yet implemented" ),
	CameraSetupApply: ( /* camerasetup*/ whichSetup, /* boolean*/ doPan, /* boolean*/ panTimed ) => /* nothing*/ warnOnce( "CameraSetupApply not yet implemented" ),
	CameraSetupApplyWithZ: ( /* camerasetup*/ whichSetup, /* real*/ zDestOffset ) => /* nothing*/ warnOnce( "CameraSetupApplyWithZ not yet implemented" ),
	CameraSetupApplyForceDuration: ( /* camerasetup*/ whichSetup, /* boolean*/ doPan, /* real*/ forceDuration ) => /* nothing*/ warnOnce( "CameraSetupApplyForceDuration not yet implemented" ),
	CameraSetupApplyForceDurationWithZ: ( /* camerasetup*/ whichSetup, /* real*/ zDestOffset, /* real*/ forceDuration ) => /* nothing*/ warnOnce( "CameraSetupApplyForceDurationWithZ not yet implemented" ),
	CameraSetTargetNoise: ( /* real*/ mag, /* real*/ velocity ) => /* nothing*/ warnOnce( "CameraSetTargetNoise not yet implemented" ),
	CameraSetSourceNoise: ( /* real*/ mag, /* real*/ velocity ) => /* nothing*/ warnOnce( "CameraSetSourceNoise not yet implemented" ),
	CameraSetTargetNoiseEx: ( /* real*/ mag, /* real*/ velocity, /* boolean*/ vertOnly ) => /* nothing*/ warnOnce( "CameraSetTargetNoiseEx not yet implemented" ),
	CameraSetSourceNoiseEx: ( /* real*/ mag, /* real*/ velocity, /* boolean*/ vertOnly ) => /* nothing*/ warnOnce( "CameraSetSourceNoiseEx not yet implemented" ),
	CameraSetSmoothingFactor: factor => /* nothing*/ warnOnce( "CameraSetSmoothingFactor not yet implemented" ),
	SetCineFilterTexture: filename => /* nothing*/ warnOnce( "SetCineFilterTexture not yet implemented" ),
	SetCineFilterBlendMode: whichMode => /* nothing*/ warnOnce( "SetCineFilterBlendMode not yet implemented" ),
	SetCineFilterTexMapFlags: whichFlags => /* nothing*/ warnOnce( "SetCineFilterTexMapFlags not yet implemented" ),
	SetCineFilterStartUV: ( /* real*/ minu, /* real*/ minv, /* real*/ maxu, /* real*/ maxv ) => /* nothing*/ warnOnce( "SetCineFilterStartUV not yet implemented" ),
	SetCineFilterEndUV: ( /* real*/ minu, /* real*/ minv, /* real*/ maxu, /* real*/ maxv ) => /* nothing*/ warnOnce( "SetCineFilterEndUV not yet implemented" ),
	SetCineFilterStartColor: ( /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "SetCineFilterStartColor not yet implemented" ),
	SetCineFilterEndColor: ( /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "SetCineFilterEndColor not yet implemented" ),
	SetCineFilterDuration: duration => /* nothing*/ warnOnce( "SetCineFilterDuration not yet implemented" ),
	DisplayCineFilter: flag => /* nothing*/ warnOnce( "DisplayCineFilter not yet implemented" ),
	IsCineFilterDisplayed: ( /* nothing*/ ) => /* boolean*/ warnOnce( "IsCineFilterDisplayed not yet implemented" ),
	SetCinematicScene: ( /* integer*/ portraitUnitId, /* playercolor*/ color, /* string*/ speakerTitle, /* string*/ text, /* real*/ sceneDuration, /* real*/ voiceoverDuration ) => /* nothing*/ warnOnce( "SetCinematicScene not yet implemented" ),
	EndCinematicScene: ( /* nothing*/ ) => /* nothing*/ warnOnce( "EndCinematicScene not yet implemented" ),
	ForceCinematicSubtitles: flag => /* nothing*/ warnOnce( "ForceCinematicSubtitles not yet implemented" ),
	NewSoundEnvironment: environmentName => /* nothing*/ warnOnce( "NewSoundEnvironment not yet implemented" ),
	CreateSound: ( /* string*/ fileName, /* boolean*/ looping, /* boolean*/ is3D, /* boolean*/ stopwhenoutofrange, /* integer*/ fadeInRate, /* integer*/ fadeOutRate, /* string*/ eaxSetting ) => /* sound*/ warnOnce( "CreateSound not yet implemented" ),
	CreateSoundFilenameWithLabel: ( /* string*/ fileName, /* boolean*/ looping, /* boolean*/ is3D, /* boolean*/ stopwhenoutofrange, /* integer*/ fadeInRate, /* integer*/ fadeOutRate, /* string*/ SLKEntryName ) => /* sound*/ warnOnce( "CreateSoundFilenameWithLabel not yet implemented" ),
	CreateSoundFromLabel: ( /* string*/ soundLabel, /* boolean*/ looping, /* boolean*/ is3D, /* boolean*/ stopwhenoutofrange, /* integer*/ fadeInRate, /* integer*/ fadeOutRate ) => /* sound*/ warnOnce( "CreateSoundFromLabel not yet implemented" ),
	CreateMIDISound: ( /* string*/ soundLabel, /* integer*/ fadeInRate, /* integer*/ fadeOutRate ) => /* sound*/ warnOnce( "CreateMIDISound not yet implemented" ),
	SetSoundParamsFromLabel: ( /* sound*/ soundHandle, /* string*/ soundLabel ) => /* nothing*/ warnOnce( "SetSoundParamsFromLabel not yet implemented" ),
	SetSoundDistanceCutoff: ( /* sound*/ soundHandle, /* real*/ cutoff ) => /* nothing*/ warnOnce( "SetSoundDistanceCutoff not yet implemented" ),
	SetSoundChannel: ( /* sound*/ soundHandle, /* integer*/ channel ) => /* nothing*/ warnOnce( "SetSoundChannel not yet implemented" ),
	SetSoundVolume: ( /* sound*/ soundHandle, /* integer*/ volume ) => /* nothing*/ warnOnce( "SetSoundVolume not yet implemented" ),
	SetSoundPitch: ( /* sound*/ soundHandle, /* real*/ pitch ) => /* nothing*/ warnOnce( "SetSoundPitch not yet implemented" ),
	SetSoundPlayPosition: ( /* sound*/ soundHandle, /* integer*/ millisecs ) => /* nothing*/ warnOnce( "SetSoundPlayPosition not yet implemented" ),
	SetSoundDistances: ( /* sound*/ soundHandle, /* real*/ minDist, /* real*/ maxDist ) => /* nothing*/ warnOnce( "SetSoundDistances not yet implemented" ),
	SetSoundConeAngles: ( /* sound*/ soundHandle, /* real*/ inside, /* real*/ outside, /* integer*/ outsideVolume ) => /* nothing*/ warnOnce( "SetSoundConeAngles not yet implemented" ),
	SetSoundConeOrientation: ( /* sound*/ soundHandle, /* real*/ x, /* real*/ y, /* real*/ z ) => /* nothing*/ warnOnce( "SetSoundConeOrientation not yet implemented" ),
	SetSoundPosition: ( /* sound*/ soundHandle, /* real*/ x, /* real*/ y, /* real*/ z ) => /* nothing*/ warnOnce( "SetSoundPosition not yet implemented" ),
	SetSoundVelocity: ( /* sound*/ soundHandle, /* real*/ x, /* real*/ y, /* real*/ z ) => /* nothing*/ warnOnce( "SetSoundVelocity not yet implemented" ),
	AttachSoundToUnit: ( /* sound*/ soundHandle, /* unit*/ whichUnit ) => /* nothing*/ warnOnce( "AttachSoundToUnit not yet implemented" ),
	StartSound: soundHandle => /* nothing*/ warnOnce( "StartSound not yet implemented" ),
	StopSound: ( /* sound*/ soundHandle, /* boolean*/ killWhenDone, /* boolean*/ fadeOut ) => /* nothing*/ warnOnce( "StopSound not yet implemented" ),
	KillSoundWhenDone: soundHandle => /* nothing*/ warnOnce( "KillSoundWhenDone not yet implemented" ),
	SetMapMusic: ( /* string*/ musicName, /* boolean*/ random, /* integer*/ index ) => /* nothing*/ warnOnce( "SetMapMusic not yet implemented" ),
	ClearMapMusic: ( /* nothing*/ ) => /* nothing*/ warnOnce( "ClearMapMusic not yet implemented" ),
	PlayMusic: musicName => /* nothing*/ warnOnce( "PlayMusic not yet implemented" ),
	PlayMusicEx: ( /* string*/ musicName, /* integer*/ frommsecs, /* integer*/ fadeinmsecs ) => /* nothing*/ warnOnce( "PlayMusicEx not yet implemented" ),
	StopMusic: fadeOut => /* nothing*/ warnOnce( "StopMusic not yet implemented" ),
	ResumeMusic: ( /* nothing*/ ) => /* nothing*/ warnOnce( "ResumeMusic not yet implemented" ),
	PlayThematicMusic: musicFileName => /* nothing*/ warnOnce( "PlayThematicMusic not yet implemented" ),
	PlayThematicMusicEx: ( /* string*/ musicFileName, /* integer*/ frommsecs ) => /* nothing*/ warnOnce( "PlayThematicMusicEx not yet implemented" ),
	EndThematicMusic: ( /* nothing*/ ) => /* nothing*/ warnOnce( "EndThematicMusic not yet implemented" ),
	SetMusicVolume: volume => /* nothing*/ warnOnce( "SetMusicVolume not yet implemented" ),
	SetMusicPlayPosition: millisecs => /* nothing*/ warnOnce( "SetMusicPlayPosition not yet implemented" ),
	SetThematicMusicPlayPosition: millisecs => /* nothing*/ warnOnce( "SetThematicMusicPlayPosition not yet implemented" ),
	SetSoundDuration: ( /* sound*/ soundHandle, /* integer*/ duration ) => /* nothing*/ warnOnce( "SetSoundDuration not yet implemented" ),
	GetSoundDuration: soundHandle => /* integer*/ warnOnce( "GetSoundDuration not yet implemented" ),
	GetSoundFileDuration: musicFileName => /* integer*/ warnOnce( "GetSoundFileDuration not yet implemented" ),
	VolumeGroupSetVolume: ( /* volumegroup*/ vgroup, /* real*/ scale ) => /* nothing*/ warnOnce( "VolumeGroupSetVolume not yet implemented" ),
	VolumeGroupReset: ( /* nothing*/ ) => /* nothing*/ warnOnce( "VolumeGroupReset not yet implemented" ),
	GetSoundIsPlaying: soundHandle => /* boolean*/ warnOnce( "GetSoundIsPlaying not yet implemented" ),
	GetSoundIsLoading: soundHandle => /* boolean*/ warnOnce( "GetSoundIsLoading not yet implemented" ),
	RegisterStackedSound: ( /* sound*/ soundHandle, /* boolean*/ byPosition, /* real*/ rectwidth, /* real*/ rectheight ) => /* nothing*/ warnOnce( "RegisterStackedSound not yet implemented" ),
	UnregisterStackedSound: ( /* sound*/ soundHandle, /* boolean*/ byPosition, /* real*/ rectwidth, /* real*/ rectheight ) => /* nothing*/ warnOnce( "UnregisterStackedSound not yet implemented" ),
	AddWeatherEffect: ( /* rect*/ where, /* integer*/ effectID ) => /* weathereffect*/ warnOnce( "AddWeatherEffect not yet implemented" ),
	RemoveWeatherEffect: whichEffect => /* nothing*/ warnOnce( "RemoveWeatherEffect not yet implemented" ),
	EnableWeatherEffect: ( /* weathereffect*/ whichEffect, /* boolean*/ enable ) => /* nothing*/ warnOnce( "EnableWeatherEffect not yet implemented" ),
	TerrainDeformCrater: ( /* real*/ x, /* real*/ y, /* real*/ radius, /* real*/ depth, /* integer*/ duration, /* boolean*/ permanent ) => /* terraindeformation*/ warnOnce( "TerrainDeformCrater not yet implemented" ),
	TerrainDeformRipple: ( /* real*/ x, /* real*/ y, /* real*/ radius, /* real*/ depth, /* integer*/ duration, /* integer*/ count, /* real*/ spaceWaves, /* real*/ timeWaves, /* real*/ radiusStartPct, /* boolean*/ limitNeg ) => /* terraindeformation*/ warnOnce( "TerrainDeformRipple not yet implemented" ),
	TerrainDeformWave: ( /* real*/ x, /* real*/ y, /* real*/ dirX, /* real*/ dirY, /* real*/ distance, /* real*/ speed, /* real*/ radius, /* real*/ depth, /* integer*/ trailTime, /* integer*/ count ) => /* terraindeformation*/ warnOnce( "TerrainDeformWave not yet implemented" ),
	TerrainDeformRandom: ( /* real*/ x, /* real*/ y, /* real*/ radius, /* real*/ minDelta, /* real*/ maxDelta, /* integer*/ duration, /* integer*/ updateInterval ) => /* terraindeformation*/ warnOnce( "TerrainDeformRandom not yet implemented" ),
	TerrainDeformStop: ( /* terraindeformation*/ deformation, /* integer*/ duration ) => /* nothing*/ warnOnce( "TerrainDeformStop not yet implemented" ),
	TerrainDeformStopAll: ( /* nothing*/ ) => /* nothing*/ warnOnce( "TerrainDeformStopAll not yet implemented" ),
	AddSpecialEffect: ( /* string*/ modelName, /* real*/ x, /* real*/ y ) => /* effect*/ warnOnce( "AddSpecialEffect not yet implemented" ),
	AddSpecialEffectLoc: ( /* string*/ modelName, /* location*/ where ) => /* effect*/ warnOnce( "AddSpecialEffectLoc not yet implemented" ),
	AddSpecialEffectTarget: ( /* string*/ modelName, /* widget*/ targetWidget, /* string*/ attachPointName ) => /* effect*/ warnOnce( "AddSpecialEffectTarget not yet implemented" ),
	DestroyEffect: whichEffect => /* nothing*/ warnOnce( "DestroyEffect not yet implemented" ),
	AddSpellEffect: ( /* string*/ abilityString, /* effecttype*/ t, /* real*/ x, /* real*/ y ) => /* effect*/ warnOnce( "AddSpellEffect not yet implemented" ),
	AddSpellEffectLoc: ( /* string*/ abilityString, /* effecttype*/ t, /* location*/ where ) => /* effect*/ warnOnce( "AddSpellEffectLoc not yet implemented" ),
	AddSpellEffectById: ( /* integer*/ abilityId, /* effecttype*/ t, /* real*/ x, /* real*/ y ) => /* effect*/ warnOnce( "AddSpellEffectById not yet implemented" ),
	AddSpellEffectByIdLoc: ( /* integer*/ abilityId, /* effecttype*/ t, /* location*/ where ) => /* effect*/ warnOnce( "AddSpellEffectByIdLoc not yet implemented" ),
	AddSpellEffectTarget: ( /* string*/ modelName, /* effecttype*/ t, /* widget*/ targetWidget, /* string*/ attachPoint ) => /* effect*/ warnOnce( "AddSpellEffectTarget not yet implemented" ),
	AddSpellEffectTargetById: ( /* integer*/ abilityId, /* effecttype*/ t, /* widget*/ targetWidget, /* string*/ attachPoint ) => /* effect*/ warnOnce( "AddSpellEffectTargetById not yet implemented" ),
	AddLightning: ( /* string*/ codeName, /* boolean*/ checkVisibility, /* real*/ x1, /* real*/ y1, /* real*/ x2, /* real*/ y2 ) => /* lightning*/ warnOnce( "AddLightning not yet implemented" ),
	AddLightningEx: ( /* string*/ codeName, /* boolean*/ checkVisibility, /* real*/ x1, /* real*/ y1, /* real*/ z1, /* real*/ x2, /* real*/ y2, /* real*/ z2 ) => /* lightning*/ warnOnce( "AddLightningEx not yet implemented" ),
	DestroyLightning: whichBolt => /* boolean*/ warnOnce( "DestroyLightning not yet implemented" ),
	MoveLightning: ( /* lightning*/ whichBolt, /* boolean*/ checkVisibility, /* real*/ x1, /* real*/ y1, /* real*/ x2, /* real*/ y2 ) => /* boolean*/ warnOnce( "MoveLightning not yet implemented" ),
	MoveLightningEx: ( /* lightning*/ whichBolt, /* boolean*/ checkVisibility, /* real*/ x1, /* real*/ y1, /* real*/ z1, /* real*/ x2, /* real*/ y2, /* real*/ z2 ) => /* boolean*/ warnOnce( "MoveLightningEx not yet implemented" ),
	GetLightningColorA: whichBolt => /* real*/ warnOnce( "GetLightningColorA not yet implemented" ),
	GetLightningColorR: whichBolt => /* real*/ warnOnce( "GetLightningColorR not yet implemented" ),
	GetLightningColorG: whichBolt => /* real*/ warnOnce( "GetLightningColorG not yet implemented" ),
	GetLightningColorB: whichBolt => /* real*/ warnOnce( "GetLightningColorB not yet implemented" ),
	SetLightningColor: ( /* lightning*/ whichBolt, /* real*/ r, /* real*/ g, /* real*/ b, /* real*/ a ) => /* boolean*/ warnOnce( "SetLightningColor not yet implemented" ),
	GetAbilityEffect: ( /* string*/ abilityString, /* effecttype*/ t, /* integer*/ index ) => /* string*/ warnOnce( "GetAbilityEffect not yet implemented" ),
	GetAbilityEffectById: ( /* integer*/ abilityId, /* effecttype*/ t, /* integer*/ index ) => /* string*/ warnOnce( "GetAbilityEffectById not yet implemented" ),
	GetAbilitySound: ( /* string*/ abilityString, /* soundtype*/ t ) => /* string*/ warnOnce( "GetAbilitySound not yet implemented" ),
	GetAbilitySoundById: ( /* integer*/ abilityId, /* soundtype*/ t ) => /* string*/ warnOnce( "GetAbilitySoundById not yet implemented" ),
	GetTerrainCliffLevel: ( /* real*/ x, /* real*/ y ) => /* integer*/ warnOnce( "GetTerrainCliffLevel not yet implemented" ),
	SetWaterBaseColor: ( /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "SetWaterBaseColor not yet implemented" ),
	SetWaterDeforms: val => /* nothing*/ warnOnce( "SetWaterDeforms not yet implemented" ),
	GetTerrainType: ( /* real*/ x, /* real*/ y ) => /* integer*/ warnOnce( "GetTerrainType not yet implemented" ),
	GetTerrainVariance: ( /* real*/ x, /* real*/ y ) => /* integer*/ warnOnce( "GetTerrainVariance not yet implemented" ),
	SetTerrainType: ( /* real*/ x, /* real*/ y, /* integer*/ terrainType, /* integer*/ variation, /* integer*/ area, /* integer*/ shape ) => /* nothing*/ warnOnce( "SetTerrainType not yet implemented" ),
	IsTerrainPathable: ( /* real*/ x, /* real*/ y, /* pathingtype*/ t ) => /* boolean*/ warnOnce( "IsTerrainPathable not yet implemented" ),
	SetTerrainPathable: ( /* real*/ x, /* real*/ y, /* pathingtype*/ t, /* boolean*/ flag ) => /* nothing*/ warnOnce( "SetTerrainPathable not yet implemented" ),
	CreateImage: ( /* string*/ file, /* real*/ sizeX, /* real*/ sizeY, /* real*/ sizeZ, /* real*/ posX, /* real*/ posY, /* real*/ posZ, /* real*/ originX, /* real*/ originY, /* real*/ originZ, /* integer*/ imageType ) => /* image*/ warnOnce( "CreateImage not yet implemented" ),
	DestroyImage: whichImage => /* nothing*/ warnOnce( "DestroyImage not yet implemented" ),
	ShowImage: ( /* image*/ whichImage, /* boolean*/ flag ) => /* nothing*/ warnOnce( "ShowImage not yet implemented" ),
	SetImageConstantHeight: ( /* image*/ whichImage, /* boolean*/ flag, /* real*/ height ) => /* nothing*/ warnOnce( "SetImageConstantHeight not yet implemented" ),
	SetImagePosition: ( /* image*/ whichImage, /* real*/ x, /* real*/ y, /* real*/ z ) => /* nothing*/ warnOnce( "SetImagePosition not yet implemented" ),
	SetImageColor: ( /* image*/ whichImage, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha ) => /* nothing*/ warnOnce( "SetImageColor not yet implemented" ),
	SetImageRender: ( /* image*/ whichImage, /* boolean*/ flag ) => /* nothing*/ warnOnce( "SetImageRender not yet implemented" ),
	SetImageRenderAlways: ( /* image*/ whichImage, /* boolean*/ flag ) => /* nothing*/ warnOnce( "SetImageRenderAlways not yet implemented" ),
	SetImageAboveWater: ( /* image*/ whichImage, /* boolean*/ flag, /* boolean*/ useWaterAlpha ) => /* nothing*/ warnOnce( "SetImageAboveWater not yet implemented" ),
	SetImageType: ( /* image*/ whichImage, /* integer*/ imageType ) => /* nothing*/ warnOnce( "SetImageType not yet implemented" ),
	CreateUbersplat: ( /* real*/ x, /* real*/ y, /* string*/ name, /* integer*/ red, /* integer*/ green, /* integer*/ blue, /* integer*/ alpha, /* boolean*/ forcePaused, /* boolean*/ noBirthTime ) => /* ubersplat*/ warnOnce( "CreateUbersplat not yet implemented" ),
	DestroyUbersplat: whichSplat => /* nothing*/ warnOnce( "DestroyUbersplat not yet implemented" ),
	ResetUbersplat: whichSplat => /* nothing*/ warnOnce( "ResetUbersplat not yet implemented" ),
	FinishUbersplat: whichSplat => /* nothing*/ warnOnce( "FinishUbersplat not yet implemented" ),
	ShowUbersplat: ( /* ubersplat*/ whichSplat, /* boolean*/ flag ) => /* nothing*/ warnOnce( "ShowUbersplat not yet implemented" ),
	SetUbersplatRender: ( /* ubersplat*/ whichSplat, /* boolean*/ flag ) => /* nothing*/ warnOnce( "SetUbersplatRender not yet implemented" ),
	SetUbersplatRenderAlways: ( /* ubersplat*/ whichSplat, /* boolean*/ flag ) => /* nothing*/ warnOnce( "SetUbersplatRenderAlways not yet implemented" ),
	SetBlight: ( /* player*/ whichPlayer, /* real*/ x, /* real*/ y, /* real*/ radius, /* boolean*/ addBlight ) => /* nothing*/ warnOnce( "SetBlight not yet implemented" ),
	SetBlightRect: ( /* player*/ whichPlayer, /* rect*/ r, /* boolean*/ addBlight ) => /* nothing*/ warnOnce( "SetBlightRect not yet implemented" ),
	SetBlightPoint: ( /* player*/ whichPlayer, /* real*/ x, /* real*/ y, /* boolean*/ addBlight ) => /* nothing*/ warnOnce( "SetBlightPoint not yet implemented" ),
	SetBlightLoc: ( /* player*/ whichPlayer, /* location*/ whichLocation, /* real*/ radius, /* boolean*/ addBlight ) => /* nothing*/ warnOnce( "SetBlightLoc not yet implemented" ),
	CreateBlightedGoldmine: ( /* player*/ id, /* real*/ x, /* real*/ y, /* real*/ face ) => /* unit*/ warnOnce( "CreateBlightedGoldmine not yet implemented" ),
	IsPointBlighted: ( /* real*/ x, /* real*/ y ) => /* boolean*/ warnOnce( "IsPointBlighted not yet implemented" ),
	SetDoodadAnimation: ( /* real*/ x, /* real*/ y, /* real*/ radius, /* integer*/ doodadID, /* boolean*/ nearestOnly, /* string*/ animName, /* boolean*/ animRandom ) => /* nothing*/ warnOnce( "SetDoodadAnimation not yet implemented" ),
	SetDoodadAnimationRect: ( /* rect*/ r, /* integer*/ doodadID, /* string*/ animName, /* boolean*/ animRandom ) => /* nothing*/ warnOnce( "SetDoodadAnimationRect not yet implemented" ),
	StartMeleeAI: ( /* player*/ num, /* string*/ script ) => /* nothing*/ warnOnce( "StartMeleeAI not yet implemented" ),
	StartCampaignAI: ( /* player*/ num, /* string*/ script ) => /* nothing*/ warnOnce( "StartCampaignAI not yet implemented" ),
	CommandAI: ( /* player*/ num, /* integer*/ command, /* integer*/ data ) => /* nothing*/ warnOnce( "CommandAI not yet implemented" ),
	PauseCompAI: ( /* player*/ p, /* boolean*/ pause ) => /* nothing*/ warnOnce( "PauseCompAI not yet implemented" ),
	GetAIDifficulty: num => /* aidifficulty*/ warnOnce( "GetAIDifficulty not yet implemented" ),
	RemoveGuardPosition: hUnit => /* nothing*/ warnOnce( "RemoveGuardPosition not yet implemented" ),
	RecycleGuardPosition: hUnit => /* nothing*/ warnOnce( "RecycleGuardPosition not yet implemented" ),
	RemoveAllGuardPositions: num => /* nothing*/ warnOnce( "RemoveAllGuardPositions not yet implemented" ),
	Cheat: cheatStr => /* nothing*/ warnOnce( "Cheat not yet implemented" ),
	IsNoVictoryCheat: ( /* nothing*/ ) => /* boolean*/ warnOnce( "IsNoVictoryCheat not yet implemented" ),
	IsNoDefeatCheat: ( /* nothing*/ ) => /* boolean*/ warnOnce( "IsNoDefeatCheat not yet implemented" ),
	Preload: filename => /* nothing*/ warnOnce( "Preload not yet implemented" ),
	PreloadEnd: timeout => /* nothing*/ warnOnce( "PreloadEnd not yet implemented" ),
	PreloadStart: ( /* nothing*/ ) => /* nothing*/ warnOnce( "PreloadStart not yet implemented" ),
	PreloadRefresh: ( /* nothing*/ ) => /* nothing*/ warnOnce( "PreloadRefresh not yet implemented" ),
	PreloadEndEx: ( /* nothing*/ ) => /* nothing*/ warnOnce( "PreloadEndEx not yet implemented" ),
	PreloadGenClear: ( /* nothing*/ ) => /* nothing*/ warnOnce( "PreloadGenClear not yet implemented" ),
	PreloadGenStart: ( /* nothing*/ ) => /* nothing*/ warnOnce( "PreloadGenStart not yet implemented" ),
	PreloadGenEnd: filename => /* nothing*/ warnOnce( "PreloadGenEnd not yet implemented" ),
	Preloader: filename => /* nothing*/ warnOnce( "Preloader not yet implemented" ),
	AutomationSetTestType: testType => /* nothing*/ warnOnce( "AutomationSetTestType not yet implemented" ),
	AutomationTestStart: testName => /* nothing*/ warnOnce( "AutomationTestStart not yet implemented" ),
	AutomationTestEnd: ( /* nothing*/ ) => /* nothing*/ warnOnce( "AutomationTestEnd not yet implemented" ),
	AutomationTestingFinished: ( /* nothing*/ ) => /* nothing*/ warnOnce( "AutomationTestingFinished not yet implemented" ),
	BlzGetTriggerPlayerMouseX: ( /* nothing*/ ) => /* real*/ warnOnce( "BlzGetTriggerPlayerMouseX not yet implemented" ),
	BlzGetTriggerPlayerMouseY: ( /* nothing*/ ) => /* real*/ warnOnce( "BlzGetTriggerPlayerMouseY not yet implemented" ),
	BlzGetTriggerPlayerMousePosition: ( /* nothing*/ ) => /* location*/ warnOnce( "BlzGetTriggerPlayerMousePosition not yet implemented" ),
	BlzGetTriggerPlayerMouseButton: ( /* nothing*/ ) => /* mousebuttontype*/ warnOnce( "BlzGetTriggerPlayerMouseButton not yet implemented" ),
	BlzSetAbilityTooltip: ( /* integer*/ abilCode, /* string*/ tooltip, /* integer*/ level ) => /* nothing*/ warnOnce( "BlzSetAbilityTooltip not yet implemented" ),
	BlzSetAbilityActivatedTooltip: ( /* integer*/ abilCode, /* string*/ tooltip, /* integer*/ level ) => /* nothing*/ warnOnce( "BlzSetAbilityActivatedTooltip not yet implemented" ),
	BlzSetAbilityExtendedTooltip: ( /* integer*/ abilCode, /* string*/ extendedTooltip, /* integer*/ level ) => /* nothing*/ warnOnce( "BlzSetAbilityExtendedTooltip not yet implemented" ),
	BlzSetAbilityActivatedExtendedTooltip: ( /* integer*/ abilCode, /* string*/ extendedTooltip, /* integer*/ level ) => /* nothing*/ warnOnce( "BlzSetAbilityActivatedExtendedTooltip not yet implemented" ),
	BlzSetAbilityResearchTooltip: ( /* integer*/ abilCode, /* string*/ researchTooltip, /* integer*/ level ) => /* nothing*/ warnOnce( "BlzSetAbilityResearchTooltip not yet implemented" ),
	BlzSetAbilityResearchExtendedTooltip: ( /* integer*/ abilCode, /* string*/ researchExtendedTooltip, /* integer*/ level ) => /* nothing*/ warnOnce( "BlzSetAbilityResearchExtendedTooltip not yet implemented" ),
	BlzGetAbilityTooltip: ( /* integer*/ abilCode, /* integer*/ level ) => /* string*/ warnOnce( "BlzGetAbilityTooltip not yet implemented" ),
	BlzGetAbilityActivatedTooltip: ( /* integer*/ abilCode, /* integer*/ level ) => /* string*/ warnOnce( "BlzGetAbilityActivatedTooltip not yet implemented" ),
	BlzGetAbilityExtendedTooltip: ( /* integer*/ abilCode, /* integer*/ level ) => /* string*/ warnOnce( "BlzGetAbilityExtendedTooltip not yet implemented" ),
	BlzGetAbilityActivatedExtendedTooltip: ( /* integer*/ abilCode, /* integer*/ level ) => /* string*/ warnOnce( "BlzGetAbilityActivatedExtendedTooltip not yet implemented" ),
	BlzGetAbilityResearchTooltip: ( /* integer*/ abilCode, /* integer*/ level ) => /* string*/ warnOnce( "BlzGetAbilityResearchTooltip not yet implemented" ),
	BlzGetAbilityResearchExtendedTooltip: ( /* integer*/ abilCode, /* integer*/ level ) => /* string*/ warnOnce( "BlzGetAbilityResearchExtendedTooltip not yet implemented" ),
	BlzSetAbilityIcon: ( /* integer*/ abilCode, /* string*/ iconPath ) => /* nothing*/ warnOnce( "BlzSetAbilityIcon not yet implemented" ),
	BlzGetAbilityIcon: abilCode => /* string*/ warnOnce( "BlzGetAbilityIcon not yet implemented" ),
	BlzSetAbilityActivatedIcon: ( /* integer*/ abilCode, /* string*/ iconPath ) => /* nothing*/ warnOnce( "BlzSetAbilityActivatedIcon not yet implemented" ),
	BlzGetAbilityActivatedIcon: abilCode => /* string*/ warnOnce( "BlzGetAbilityActivatedIcon not yet implemented" ),
	BlzGetAbilityPosX: abilCode => /* integer*/ warnOnce( "BlzGetAbilityPosX not yet implemented" ),
	BlzGetAbilityPosY: abilCode => /* integer*/ warnOnce( "BlzGetAbilityPosY not yet implemented" ),
	BlzSetAbilityPosX: ( /* integer*/ abilCode, /* integer*/ x ) => /* nothing*/ warnOnce( "BlzSetAbilityPosX not yet implemented" ),
	BlzSetAbilityPosY: ( /* integer*/ abilCode, /* integer*/ y ) => /* nothing*/ warnOnce( "BlzSetAbilityPosY not yet implemented" ),
	BlzGetAbilityActivatedPosX: abilCode => /* integer*/ warnOnce( "BlzGetAbilityActivatedPosX not yet implemented" ),
	BlzGetAbilityActivatedPosY: abilCode => /* integer*/ warnOnce( "BlzGetAbilityActivatedPosY not yet implemented" ),
	BlzSetAbilityActivatedPosX: ( /* integer*/ abilCode, /* integer*/ x ) => /* nothing*/ warnOnce( "BlzSetAbilityActivatedPosX not yet implemented" ),
	BlzSetAbilityActivatedPosY: ( /* integer*/ abilCode, /* integer*/ y ) => /* nothing*/ warnOnce( "BlzSetAbilityActivatedPosY not yet implemented" ),
	BlzGetUnitMaxHP: whichUnit => /* integer*/ warnOnce( "BlzGetUnitMaxHP not yet implemented" ),
	BlzSetUnitMaxHP: ( /* unit*/ whichUnit, /* integer*/ hp ) => /* nothing*/ warnOnce( "BlzSetUnitMaxHP not yet implemented" ),
	BlzGetUnitMaxMana: whichUnit => /* integer*/ warnOnce( "BlzGetUnitMaxMana not yet implemented" ),
	BlzSetUnitMaxMana: ( /* unit*/ whichUnit, /* integer*/ mana ) => /* nothing*/ warnOnce( "BlzSetUnitMaxMana not yet implemented" ),
	BlzSetItemName: ( /* item*/ whichItem, /* string*/ name ) => /* nothing*/ warnOnce( "BlzSetItemName not yet implemented" ),
	BlzSetItemDescription: ( /* item*/ whichItem, /* string*/ description ) => /* nothing*/ warnOnce( "BlzSetItemDescription not yet implemented" ),
	BlzGetItemDescription: whichItem => /* string*/ warnOnce( "BlzGetItemDescription not yet implemented" ),
	BlzSetItemTooltip: ( /* item*/ whichItem, /* string*/ tooltip ) => /* nothing*/ warnOnce( "BlzSetItemTooltip not yet implemented" ),
	BlzGetItemTooltip: whichItem => /* string*/ warnOnce( "BlzGetItemTooltip not yet implemented" ),
	BlzSetItemExtendedTooltip: ( /* item*/ whichItem, /* string*/ extendedTooltip ) => /* nothing*/ warnOnce( "BlzSetItemExtendedTooltip not yet implemented" ),
	BlzGetItemExtendedTooltip: whichItem => /* string*/ warnOnce( "BlzGetItemExtendedTooltip not yet implemented" ),
	BlzSetItemIconPath: ( /* item*/ whichItem, /* string*/ iconPath ) => /* nothing*/ warnOnce( "BlzSetItemIconPath not yet implemented" ),
	BlzGetItemIconPath: whichItem => /* string*/ warnOnce( "BlzGetItemIconPath not yet implemented" ),
	BlzSetUnitName: ( /* unit*/ whichUnit, /* string*/ name ) => /* nothing*/ warnOnce( "BlzSetUnitName not yet implemented" ),
	BlzSetHeroProperName: ( /* unit*/ whichUnit, /* string*/ heroProperName ) => /* nothing*/ warnOnce( "BlzSetHeroProperName not yet implemented" ),
	BlzGetUnitBaseDamage: ( /* unit*/ whichUnit, /* integer*/ weaponIndex ) => /* integer*/ warnOnce( "BlzGetUnitBaseDamage not yet implemented" ),
	BlzSetUnitBaseDamage: ( /* unit*/ whichUnit, /* integer*/ baseDamage, /* integer*/ weaponIndex ) => /* nothing*/ warnOnce( "BlzSetUnitBaseDamage not yet implemented" ),
	BlzGetUnitDiceNumber: ( /* unit*/ whichUnit, /* integer*/ weaponIndex ) => /* integer*/ warnOnce( "BlzGetUnitDiceNumber not yet implemented" ),
	BlzSetUnitDiceNumber: ( /* unit*/ whichUnit, /* integer*/ diceNumber, /* integer*/ weaponIndex ) => /* nothing*/ warnOnce( "BlzSetUnitDiceNumber not yet implemented" ),
	BlzGetUnitDiceSides: ( /* unit*/ whichUnit, /* integer*/ weaponIndex ) => /* integer*/ warnOnce( "BlzGetUnitDiceSides not yet implemented" ),
	BlzSetUnitDiceSides: ( /* unit*/ whichUnit, /* integer*/ diceSides, /* integer*/ weaponIndex ) => /* nothing*/ warnOnce( "BlzSetUnitDiceSides not yet implemented" ),
	BlzGetUnitAttackCooldown: ( /* unit*/ whichUnit, /* integer*/ weaponIndex ) => /* real*/ warnOnce( "BlzGetUnitAttackCooldown not yet implemented" ),
	BlzSetUnitAttackCooldown: ( /* unit*/ whichUnit, /* real*/ cooldown, /* integer*/ weaponIndex ) => /* nothing*/ warnOnce( "BlzSetUnitAttackCooldown not yet implemented" ),
	BlzSetSpecialEffectColorByPlayer: ( /* effect*/ whichEffect, /* player*/ whichPlayer ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectColorByPlayer not yet implemented" ),
	BlzSetSpecialEffectColor: ( /* effect*/ whichEffect, /* integer*/ r, /* integer*/ g, /* integer*/ b ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectColor not yet implemented" ),
	BlzSetSpecialEffectAlpha: ( /* effect*/ whichEffect, /* integer*/ alpha ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectAlpha not yet implemented" ),
	BlzSetSpecialEffectScale: ( /* effect*/ whichEffect, /* real*/ scale ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectScale not yet implemented" ),
	BlzSetSpecialEffectPosition: ( /* effect*/ whichEffect, /* real*/ x, /* real*/ y, /* real*/ z ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectPosition not yet implemented" ),
	BlzSetSpecialEffectHeight: ( /* effect*/ whichEffect, /* real*/ height ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectHeight not yet implemented" ),
	BlzSetSpecialEffectTimeScale: ( /* effect*/ whichEffect, /* real*/ timeScale ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectTimeScale not yet implemented" ),
	BlzSetSpecialEffectTime: ( /* effect*/ whichEffect, /* real*/ time ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectTime not yet implemented" ),
	BlzSetSpecialEffectOrientation: ( /* effect*/ whichEffect, /* real*/ yaw, /* real*/ pitch, /* real*/ roll ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectOrientation not yet implemented" ),
	BlzSetSpecialEffectYaw: ( /* effect*/ whichEffect, /* real*/ yaw ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectYaw not yet implemented" ),
	BlzSetSpecialEffectPitch: ( /* effect*/ whichEffect, /* real*/ pitch ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectPitch not yet implemented" ),
	BlzSetSpecialEffectRoll: ( /* effect*/ whichEffect, /* real*/ roll ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectRoll not yet implemented" ),
	BlzSetSpecialEffectX: ( /* effect*/ whichEffect, /* real*/ x ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectX not yet implemented" ),
	BlzSetSpecialEffectY: ( /* effect*/ whichEffect, /* real*/ y ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectY not yet implemented" ),
	BlzSetSpecialEffectZ: ( /* effect*/ whichEffect, /* real*/ z ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectZ not yet implemented" ),
	BlzSetSpecialEffectPositionLoc: ( /* effect*/ whichEffect, /* location*/ loc ) => /* nothing*/ warnOnce( "BlzSetSpecialEffectPositionLoc not yet implemented" ),
	BlzGetLocalSpecialEffectX: whichEffect => /* real*/ warnOnce( "BlzGetLocalSpecialEffectX not yet implemented" ),
	BlzGetLocalSpecialEffectY: whichEffect => /* real*/ warnOnce( "BlzGetLocalSpecialEffectY not yet implemented" ),
	BlzGetLocalSpecialEffectZ: whichEffect => /* real*/ warnOnce( "BlzGetLocalSpecialEffectZ not yet implemented" ),
	BlzSpecialEffectClearSubAnimations: whichEffect => /* nothing*/ warnOnce( "BlzSpecialEffectClearSubAnimations not yet implemented" ),
	BlzSpecialEffectRemoveSubAnimation: ( /* effect*/ whichEffect, /* subanimtype*/ whichSubAnim ) => /* nothing*/ warnOnce( "BlzSpecialEffectRemoveSubAnimation not yet implemented" ),
	BlzSpecialEffectAddSubAnimation: ( /* effect*/ whichEffect, /* subanimtype*/ whichSubAnim ) => /* nothing*/ warnOnce( "BlzSpecialEffectAddSubAnimation not yet implemented" ),
	BlzPlaySpecialEffect: ( /* effect*/ whichEffect, /* animtype*/ whichAnim ) => /* nothing*/ warnOnce( "BlzPlaySpecialEffect not yet implemented" ),
	BlzPlaySpecialEffectWithTimeScale: ( /* effect*/ whichEffect, /* animtype*/ whichAnim, /* real*/ timeScale ) => /* nothing*/ warnOnce( "BlzPlaySpecialEffectWithTimeScale not yet implemented" ),
	BlzGetAnimName: whichAnim => /* string*/ warnOnce( "BlzGetAnimName not yet implemented" ),
	BlzGetUnitArmor: whichUnit => /* real*/ warnOnce( "BlzGetUnitArmor not yet implemented" ),
	BlzSetUnitArmor: ( /* unit*/ whichUnit, /* real*/ armorAmount ) => /* nothing*/ warnOnce( "BlzSetUnitArmor not yet implemented" ),
	BlzUnitHideAbility: ( /* unit*/ whichUnit, /* integer*/ abilId, /* boolean*/ flag ) => /* nothing*/ warnOnce( "BlzUnitHideAbility not yet implemented" ),
	BlzUnitDisableAbility: ( /* unit*/ whichUnit, /* integer*/ abilId, /* boolean*/ flag, /* boolean*/ hideUI ) => /* nothing*/ warnOnce( "BlzUnitDisableAbility not yet implemented" ),
	BlzUnitCancelTimedLife: whichUnit => /* nothing*/ warnOnce( "BlzUnitCancelTimedLife not yet implemented" ),
	BlzIsUnitSelectable: whichUnit => /* boolean*/ warnOnce( "BlzIsUnitSelectable not yet implemented" ),
	BlzIsUnitInvulnerable: whichUnit => /* boolean*/ warnOnce( "BlzIsUnitInvulnerable not yet implemented" ),
	BlzUnitInterruptAttack: whichUnit => /* nothing*/ warnOnce( "BlzUnitInterruptAttack not yet implemented" ),
	BlzGetUnitCollisionSize: whichUnit => /* real*/ warnOnce( "BlzGetUnitCollisionSize not yet implemented" ),
	BlzGetAbilityManaCost: ( /* integer*/ abilId, /* integer*/ level ) => /* integer*/ warnOnce( "BlzGetAbilityManaCost not yet implemented" ),
	BlzGetAbilityCooldown: ( /* integer*/ abilId, /* integer*/ level ) => /* real*/ warnOnce( "BlzGetAbilityCooldown not yet implemented" ),
	BlzSetUnitAbilityCooldown: ( /* unit*/ whichUnit, /* integer*/ abilId, /* integer*/ level, /* real*/ cooldown ) => /* nothing*/ warnOnce( "BlzSetUnitAbilityCooldown not yet implemented" ),
	BlzGetUnitAbilityCooldown: ( /* unit*/ whichUnit, /* integer*/ abilId, /* integer*/ level ) => /* real*/ warnOnce( "BlzGetUnitAbilityCooldown not yet implemented" ),
	BlzGetUnitAbilityCooldownRemaining: ( /* unit*/ whichUnit, /* integer*/ abilId ) => /* real*/ warnOnce( "BlzGetUnitAbilityCooldownRemaining not yet implemented" ),
	BlzEndUnitAbilityCooldown: ( /* unit*/ whichUnit, /* integer*/ abilCode ) => /* nothing*/ warnOnce( "BlzEndUnitAbilityCooldown not yet implemented" ),
	BlzGetUnitAbilityManaCost: ( /* unit*/ whichUnit, /* integer*/ abilId, /* integer*/ level ) => /* integer*/ warnOnce( "BlzGetUnitAbilityManaCost not yet implemented" ),
	BlzSetUnitAbilityManaCost: ( /* unit*/ whichUnit, /* integer*/ abilId, /* integer*/ level, /* integer*/ manaCost ) => /* nothing*/ warnOnce( "BlzSetUnitAbilityManaCost not yet implemented" ),
	BlzGetLocalUnitZ: whichUnit => /* real */ warnOnce( "BlzGetLocalUnitZ not yet implemented" ),
	BlzDecPlayerTechResearched: ( /* player*/ whichPlayer, /* integer*/ techid, /* integer*/ levels ) => /* nothing*/ warnOnce( "BlzDecPlayerTechResearched not yet implemented" ),
	BlzSetEventDamage: damage => /* nothing*/ warnOnce( "BlzSetEventDamage not yet implemented" ),
	RequestExtraIntegerData: ( /* integer*/ dataType, /* player*/ whichPlayer, /* string*/ param1, /* string*/ param2, /* boolean*/ param3, /* integer*/ param4, /* integer*/ param5, /* integer*/ param6 ) => /* integer*/ warnOnce( "RequestExtraIntegerData not yet implemented" ),
	RequestExtraBooleanData: ( /* integer*/ dataType, /* player*/ whichPlayer, /* string*/ param1, /* string*/ param2, /* boolean*/ param3, /* integer*/ param4, /* integer*/ param5, /* integer*/ param6 ) => /* boolean*/ warnOnce( "RequestExtraBooleanData not yet implemented" ),
	RequestExtraStringData: ( /* integer*/ dataType, /* player*/ whichPlayer, /* string*/ param1, /* string*/ param2, /* boolean*/ param3, /* integer*/ param4, /* integer*/ param5, /* integer*/ param6 ) => /* string*/ warnOnce( "RequestExtraStringData not yet implemented" ),
	RequestExtraRealData: ( /* integer*/ dataType, /* player*/ whichPlayer, /* string*/ param1, /* string*/ param2, /* boolean*/ param3, /* integer*/ param4, /* integer*/ param5, /* integer*/ param6 ) => /* real*/ warnOnce( "RequestExtraRealData not yet implemented" ),
	BlzGetUnitZ: whichUnit => /* real*/ warnOnce( "BlzGetUnitZ not yet implemented" ),
} );
